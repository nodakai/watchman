Index: watchman-3.7.0/html-docs/bser.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/bser.html
@@ -0,0 +1,842 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/bser.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="BSER Binary Protocol" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>BSER Binary Protocol</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/bser.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "BSER Binary Protocol",
+        currentGroup: "Internals",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">BSER Binary Protocol</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The basic JSON protocol in watchman allows quick and easy integration.
+Applications with higher performance requirements may want to consider the
+binary protocol instead.</p>
+
+<p>The binary protocol is enabled by the client sending the byte sequence
+&quot;\x00x\x01&quot;.</p>
+
+<h2 id="pdu">PDU</h2>
+
+<p>A PDU is prefixed by its length expressed as an encoded integer.  This allows
+the peer to determine how much storage is required to read and decode it.</p>
+
+<h2 id="arrays">Arrays</h2>
+
+<p>Arrays are indicated by a <code>0x00</code> byte value followed by an integer value to
+indicate how many items follow.  Then each item is encoded one after the other.</p>
+
+<h2 id="objects">Objects</h2>
+
+<p>Objects are indicated by a <code>0x01</code> byte value followed by an integer value to
+indicate the number of properties in the object.  Then each key/value pair is
+encoded one after the other.</p>
+
+<h2 id="strings">Strings</h2>
+
+<p>Strings are indicated by a <code>0x02</code> byte value followed by an integer value to
+indicate the number of bytes in the string, followed by the bytes of the
+string.</p>
+
+<p>Unlike JSON, strings are not defined as having any particular encoding; they
+are transmitted as binary strings.  This is because the underlying filesystem
+APIs don&#39;t define any particular encoding for names.</p>
+
+<p>Keys in objects that are defined by watchman commands are always ASCII.</p>
+
+<h2 id="integers">Integers</h2>
+
+<p>All integers are signed and transmitted in the host byte order of the system
+running the watchman daemon.</p>
+
+<ul>
+<li><code>0x03</code> indicates an int8_t.  It is followed by the int8_t value.</li>
+<li><code>0x04</code> indicates an int16_t. It is followed by the int16_t value.</li>
+<li><code>0x05</code> indicates an int32_t. It is followed by the int32_t value.</li>
+<li><code>0x06</code> indicates an int64_t. It is followed by the int64_t value.</li>
+</ul>
+
+<h2 id="real">Real</h2>
+
+<p>A real number is indicated by a <code>0x07</code> byte followed by 8 bytes of double value.</p>
+
+<h2 id="boolean">Boolean</h2>
+
+<ul>
+<li><code>0x08</code> indicates boolean true</li>
+<li><code>0x09</code> indicates boolean false</li>
+</ul>
+
+<h2 id="null">Null</h2>
+
+<p><code>0x0a</code> indicates the null value</p>
+
+<h2 id="array-of-templated-objects">Array of Templated Objects</h2>
+
+<p><code>0x0b</code> indicates a compact array of objects follows.  Some of the bigger
+datastructures returned by watchman are tabular data expressed as an array
+of objects.  This serialization type factors out the repeated object keys
+into a header array listing the keys, followed by an array containing
+all the values of the objects.</p>
+
+<p>To represent missing keys in templated arrays, the <code>0x0c</code> encoding value may
+be present.  If encountered it is interpreted as meaning that there is no value
+for the key that would have been decoded in this position.  This is distinct
+from the null value.</p>
+
+<p>For example:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[
+   {&quot;name&quot;: &quot;fred&quot;, &quot;age&quot;: 20},
+   {&quot;name&quot;: &quot;pete&quot;, &quot;age&quot;: 30},
+   {&quot;age&quot;: 25 },
+]
+</code></pre></div>
+<p>is represented similar to:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;name&quot;, &quot;age&quot;],
+[
+  &quot;fred&quot;, 20,
+  &quot;pete&quot;, 30,
+  0x0c,   25
+]
+</code></pre></div>
+<p>The precise sequence is:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">0b          template
+00          array     -- start prop names
+0302        int, 2    -- two prop names
+02          string    -- first prop &quot;name&quot;
+0304        int, 4
+6e616d65    &quot;name&quot;
+02          string    -- 2nd prop &quot;age&quot;
+0303        int, 3
+616765      &quot;age&quot;
+0303        int, 3    -- there are 3 objects
+02          string    -- object 1, prop 1 name=fred
+0304        int, 4
+66726564    &quot;fred&quot;
+0314        int 0x14  -- object 1, prop 2 age=20
+02          string    -- object 2, prop 1 name=pete
+0304        int 4
+70657465    &quot;pete&quot;
+031e        int, 0x1e -- object 2, prop 2 age=30
+0c          skip      -- object 3, prop 1, not set
+0319        int, 0x19 -- object 3, prop 2 age=25
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/capabilities.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/capabilities.html
@@ -0,0 +1,787 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/capabilities.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Capabilities" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Capabilities</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/capabilities.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Capabilities",
+        currentGroup: "",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Capabilities</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>Since 3.8</em></p>
+
+<p>Capability names are used to identify modules that are either conditionally
+configured or that are introduced over time.</p>
+
+<p>You can use the <a href="/watchman/docs/cmd/version.html">expanded version command</a>
+to query capabilities and avoid building knowledge of version numbers in
+your client application(s).</p>
+
+<p>You can use <a href="/watchman/docs/cmd/list-capabilities.html">list-capabilities</a>
+command to obtain a list of capabilities supported by your watchman server.</p>
+
+<h3 id="commands">Commands</h3>
+
+<p>Every command is identified by the command name prefixed by the string <code>cmd-</code>.
+For example, the <code>watch-project</code> command is indicated by the capability name
+<code>cmd-watch-project</code>.</p>
+
+<h3 id="expression-terms">Expression Terms</h3>
+
+<p>Every expression term is identified by the term name prefixed by the string
+<code>term-</code>.  For example, the <code>match</code> term is indicated by the capability name
+<code>term-match</code>.</p>
+
+<h3 id="file-result-fields">File Result Fields</h3>
+
+<p>Every field is identified by the field name prefixed by the string <code>field-</code>.
+For example, the <code>size</code> field is indicated by the capability name <code>field-size</code>.</p>
+
+<h3 id="feature-enhancements">Feature Enhancements</h3>
+
+<p>Sometimes we will enhance existing functionality by adding new options to
+existing commands.  Since these changes won&#39;t result in adding a new command
+they won&#39;t implicitly gain a capability name.  In these cases we&#39;ll assign
+an appropriate capability name by hand.</p>
+
+<p>The following feature capabilities are possible / released:</p>
+
+<table><thead>
+<tr>
+<th>Capability Name</th>
+<th>Since version</th>
+<th>Description</th>
+</tr>
+</thead><tbody>
+<tr>
+<td><code>relative_root</code></td>
+<td>3.3</td>
+<td><code>relative_root</code> query option</td>
+</tr>
+<tr>
+<td><code>wildmatch</code></td>
+<td>3.7</td>
+<td><a href="/watchman/docs/expr/match.html#wildmatch">Expanded <code>match</code> term with recursive globs</a></td>
+</tr>
+</tbody></table>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/casefolding.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/casefolding.html
@@ -0,0 +1,798 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/casefolding.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Case-Insensitivity" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Case-Insensitivity</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/casefolding.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Case-Insensitivity",
+        currentGroup: "Internals",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Case-Insensitivity</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Watchman is currently completely unaware of case-insensitivity in file systems,
+and does not attempt to do any case-folding of file names. On a case-insensitive
+file system like Mac OS X&#39;s <a href="https://en.wikipedia.org/wiki/HFS_Plus">HFS+</a>, this
+can manifest itself in different ways:</p>
+
+<ul>
+<li>If a file <code>foo.txt</code> is renamed to <code>FOO.txt</code>, Watchman will report <code>FOO.txt</code> as
+created and <code>foo.txt</code> separately as changed.</li>
+<li>If a file <code>foo.txt</code> is removed and another file <code>FOO.txt</code> is later added,
+Watchman will report <code>FOO.txt</code> as added, but it might report <code>foo.txt</code> as
+either removed or changed.</li>
+</ul>
+
+<p>In general, both <code>foo.txt</code> and <code>FOO.txt</code> can be reported, sometimes with
+different stat data, sometimes with the same stat data.</p>
+
+<h2 id="why-doesn-39-t-watchman-support-case-folding-properly">Why doesn&#39;t Watchman support case-folding properly?</h2>
+
+<p>One problem is that &#39;properly&#39; is hard to pin down. There are at least four
+levels of correctness here:</p>
+
+<ul>
+<li>handle ASCII case-folding only (95% solution)</li>
+<li>handle ASCII + accented ASCII case-folding only (98%)</li>
+<li>full handling of current Unicode spec using a Unicode database (99%)</li>
+<li>using the special folding table written to a hidden file on disk at file
+system creation time that matches Apple&#39;s interpretation of Unicode at the time
+of the OS release + their own quirks (100%)</li>
+</ul>
+
+<p>Clients of Watchman might have their own idea of case-folding, which might or
+might not be compatible with Watchman&#39;s idea of it. So far, clients have managed
+to handle case-folding outside of Watchman, with some success.</p>
+
+<h2 id="does-this-matter">Does this matter?</h2>
+
+<p>It depends on your application.</p>
+
+<p><strong>Example 1:</strong> Your application is a build system that has a pre-baked list of
+files. Your application expects files to be on disk in the correct case even on
+case-insensitive file systems, and you declare that the behavior is undefined if
+they aren&#39;t. You invoke Watchman by asking it what files have changed. In this
+case, Watchman should work without you having to do anything special.</p>
+
+<p><strong>Example 2:</strong> Your application is a build system rule to generate CSS rules
+that is run by a Watchman trigger on <code>*.scss</code>. You expect all files you care
+about to end with the string <code>.scss</code> on case-insensitive file systems, and not
+another variant of it like <code>.SCSS</code>. In this case, Watchman should work fine --
+at most, it will provide you the same file multiple times with different case
+variants. You might be dealing with that in your build system anyway.</p>
+
+<p><strong>Example 3:</strong> Like example 2, except you expect <code>.SCSS</code> and other variants to
+work too. In that case the only way is to explicitly add all possible variants
+to the trigger rule.</p>
+
+<p><strong>Example 4:</strong> You&#39;re a source control system that has its own ideas about
+case-folding that might or might not match up with the operating system&#39;s. You
+perform case-folding against an internal data structure, so that if the data
+structure has <code>foo.txt</code> and the file system has <code>FOO.txt</code> you make <code>foo.txt</code>
+take precedence. In that case, Watchman will tell you about both <code>FOO.txt</code> and
+<code>foo.txt</code>, and it&#39;s up to you to perform
+normalization. <a href="https://bitbucket.org/facebook/hgwatchman">hgwatchman</a> just
+consults the file system in the rare case that a file changes case.</p>
+
+<h2 id="credits">Credits</h2>
+
+<p>The levels of correctness were proposed by Matt Mackall <a href="mailto:mpm@selenic.com">mpm@selenic.com</a>.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cli-options.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cli-options.html
@@ -0,0 +1,899 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cli-options.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Command Line" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Command Line</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cli-options.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Command Line",
+        currentGroup: "Invocation",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Command Line</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>watchman</code> executable contains both the client and the server components
+of the watchman service.</p>
+
+<p>By default, when <code>watchman</code> is run, it will attempt to communicate with your
+existing server instance (each user has their own persistent process), and will
+attempt to start it if it doesn&#39;t exist.</p>
+
+<p>There are some options that affect how <code>watchman</code> will locate the server, some
+options that affect only the client and some others that affect only the
+server.  Since all of the options are understood by the same executable we&#39;ve
+broken those out into sections of their own to make it clearer when they apply.</p>
+
+<h2 id="quick-note-on-default-locations">Quick note on default locations</h2>
+
+<p>Watchman will prefer to resolve your user name from the <code>$USER</code> environmental
+variable, or <code>$LOGNAME</code> if <code>$USER</code> was not set.  If neither are set watchman
+will look it up from the system using <code>getpwuid(getuid())</code>.  When we refer to
+<code>&lt;USER&gt;</code> in this documentation we mean the result of this resolution.</p>
+
+<p>In some cases Watchman will need to create files in a temporary location.
+Watchman will resolve this temporary location by looking at the <code>$TMPDIR</code>
+environmental variable, or <code>$TMP</code> if <code>$TMPDIR</code> was not set.  If neither are set
+watchman will use <code>/tmp</code>.  When we refer to <code>&lt;TMPDIR&gt;</code> in this documentation we
+mean the result of this resolution.</p>
+
+<p>Watchman tracks its persistent state in a location that we refer to as the
+<code>&lt;STATEDIR&gt;</code> in this documentation.</p>
+
+<p><em>Since 3.1.</em></p>
+
+<p>The <code>STATEDIR</code> defaulted to <code>&lt;PREFIX&gt;/var/run/watchman</code>.  You can change this
+default when you build watchman by using the configure option
+<code>--enable-statedir</code>.</p>
+
+<p>Earlier versions of Watchman didn&#39;t have a default statedir and would instead
+use the <code>&lt;TMPDIR&gt;</code> for this state.  We switched away from that because some
+environments randomize the <code>&lt;TMPDIR&gt;</code> location and this made it difficult for
+clients to locate the Watchman service.</p>
+
+<p><em>Since 3.8.</em></p>
+
+<p>The <code>STATEDIR</code> defaults to <code>&lt;PREFIX&gt;/var/run/watchman/&lt;USER&gt;-state</code>.  You can
+change this default when you build watchman by using the configure option
+<code>--enable-statedir</code>; the configure option replaces the
+<code>&lt;PREFIX&gt;/var/run/watchman</code> portion of this string.  If you specify
+<code>--disable-statedir</code> then that portion of the string will be computed from the
+<code>&lt;TMPDIR&gt;</code> location.</p>
+
+<p>Watchman will create the <code>&lt;USER&gt;-state</code> portion if it does not exist, and will
+perform some permission and ownership checks to reduce the risk of untrusted
+users placing files in this location.  If those checks are not satisfied,
+watchman will refuse to start.</p>
+
+<h2 id="locating-the-service">Locating the service</h2>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> -U, --sockname=PATH   Specify alternate sockname
+</code></pre></div>
+<p>The default location for sockname will be <code>&lt;STATEDIR&gt;/&lt;USER&gt;</code>.  Older versions
+of Watchman would default to <code>&lt;TMPDIR&gt;/.watchman.&lt;USER&gt;</code>, depending on how
+it was configured.</p>
+
+<p>If you are building a client to access the service programmatically, we
+recommend that you invoke <a href="/watchman/docs/cmd/get-sockname.html">watchman get-sockname</a> to discover the path that the client and
+server would use.  This has the side effect of spawning the service for you if
+it isn&#39;t already running.</p>
+
+<h2 id="client-options">Client Options</h2>
+
+<p>The <code>watchman</code> executable will attempt to start the service if there is no
+response on the socket specified above.  In some cases it is desirable to avoid
+starting the service if it isn&#39;t running:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> --no-spawn            Don&#39;t spawn service if it is not already running.
+                       Will try running the command in client mode if
+                       possible.
+ --no-local            When no-spawn is enabled, don&#39;t use client mode
+</code></pre></div>
+<p>Client mode implements the <a href="/watchman/docs/cmd/find.html">watchman find command</a> as an immediate search.</p>
+
+<p>These options control how the client talks to the server:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> -p, --persistent           Persist and wait for further responses
+     --server-encoding=ARG  CLI&lt;-&gt;server encoding. json or bser.
+</code></pre></div>
+<p>Persistent connections have relatively limited use with the CLI, but can be
+useful to connect ad-hoc to the service to receive logging information (See
+<a href="/watchman/docs/cmd/log-level.html">log-level</a>).</p>
+
+<p>The server encoding option controls how requests and responses are formatted
+when talking to the server.  You generally shouldn&#39;t need to worry about this.</p>
+
+<h3 id="input-and-output">Input and Output</h3>
+
+<p>Most simple invocations of the CLI will pass a list of arguments:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman watch /path/to/dir
+</code></pre></div>
+<p>This is turned into a request like this:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;watch&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/dir&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>and sent to the service using the <a href="/watchman/docs/socket-interface.html">Socket Interface</a>.</p>
+
+<p>The response is received and then sent to the <code>stdout</code> stream formatted based on
+the selected output-encoding:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">     --output-encoding=ARG  CLI output encoding. json (default) or bser
+     --no-pretty            Don&#39;t pretty print JSON output (more efficient
+                            when being processed by another program)
+</code></pre></div>
+<p>Each command has its own response output but watchman will always include a
+field named <code>error</code> if something about the request was not successful.  In case
+of some protocol level errors (eg: connection was terminated) instead of
+printing a response on <code>stdout</code>, an unstructured error message will be printed
+to <code>stderr</code> and the process will exit with a non-zero exit status.</p>
+
+<p>Instead of passing the request as command line parameters, you can send a JSON
+representation on the <code>stdin</code> stream.  These invocations are all equivalent:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman watch /path/to/dir
+</code></pre></div><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;watch&quot;, &quot;/path/to/dir&quot;]</span>
+<span class="s">EOT</span>
+</code></pre></div><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="o">&lt;&lt;&lt;</span> <span class="s1">&#39;[&quot;watch&quot;, &quot;/path/to/dir&quot;]&#39;</span>
+</code></pre></div><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;[&quot;watch&quot;, &quot;/path/to/dir&quot;]&#39;</span> <span class="p">|</span> watchman -j
+</code></pre></div><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;[&quot;watch&quot;, &quot;/path/to/dir&quot;]&#39;</span> &gt; cmd.json
+<span class="nv">$ </span>watchman -j &lt; cmd.json
+</code></pre></div><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman --json-command <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;watch&quot;, &quot;/path/to/dir&quot;]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+<p><em>Since 3.8</em></p>
+
+<p>The CLI now also recognizes BSER as a valid input stream when using the <code>-j</code>
+option.  This will implicitly set <code>--server-encoding=bser</code> and
+<code>--output-encoding=bser</code> if those options have not been set to something else.</p>
+
+<h2 id="exit-status">Exit Status</h2>
+
+<p>The <code>watchman</code> binary will exit with a return code of 0 in most cases; this
+indicates that the output it generated should be valid JSON.  To determine if
+your command was successful, you need to parse the JSON and look for the
+<code>error</code> field as described above.</p>
+
+<p><code>watchman</code> will exit with a non-zero exit status in cases where something
+low-level went wrong, such as protocol level errors (eg: connection was
+terminated).</p>
+
+<h2 id="server-options">Server Options</h2>
+
+<p>These options are used when starting the server.  They are recognized by the
+client and affect how it will start the server, but have no effect if the
+server is already running.  To change the effective values of these options
+for a running server, you will need to restart it (you can stop it by running
+<a href="/watchman/docs/cmd/shutdown-server.html">watchman shutdown-server</a>).</p>
+
+<p>By default, watchman will remember all watches and associated triggers and
+reinstate them if the process is restarted.  This state is stored in the
+<em>statefile</em>:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> --statefile=PATH      Specify path to file to hold watch and trigger state
+ -n, --no-save-state   Don&#39;t save state between invocations
+</code></pre></div>
+<p>The default location for statefile will be <code>&lt;STATEDIR&gt;/&lt;USER&gt;.state</code>.  Older
+versions of watchman may store the state in <code>&lt;TMPDIR&gt;/.watchman.&lt;USER&gt;.state</code>,
+depending on how they were configured.</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">-o, --logfile=PATH   Specify path to logfile
+    --log-level      set log verbosity (0 = off, default is 1, verbose = 2)
+</code></pre></div>
+<p>The default location for logfile will be <code>&lt;STATEDIR&gt;/&lt;USER&gt;.log</code>.  Older
+versions of watchman may store the logs in <code>&lt;TMPDIR&gt;/.watchman.&lt;USER&gt;.log</code>,
+depending on how they were configured.</p>
+
+<p>In some relatively uncommon circumstances, such as in test harnesses, you may
+need to directly run the service without it putting itself into the background:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> -f, --foreground      Run the service in the foreground
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/clockspec.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/clockspec.html
@@ -0,0 +1,760 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/clockspec.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Clockspec" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Clockspec</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/clockspec.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Clockspec",
+        currentGroup: "Queries",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Clockspec</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>For commands that query based on time, watchman offers a couple of different
+ways to measure time.</p>
+
+<ul>
+<li>number of seconds since the unix epoch (unix <code>time_t</code> style)</li>
+<li><strong>recommended for most users</strong>: a named cursor of the form <code>n:whatever</code></li>
+<li><strong>recommended for advanced users</strong>: a clock id of the form <code>c:123:234</code></li>
+</ul>
+
+<p>The first and most obvious is passing a unix timestamp.  Watchman records
+the observed time that files change and allows you to find files that have
+changed since that time.  Using a timestamp is prone to race conditions
+in understanding the complete state of the file tree.</p>
+
+<p>Using an abstract clock id insulates the client from these race conditions by
+ticking as changes are detected rather than as time moves.  Watchman returns
+the current clock id when it delivers match results; you can use that value as
+the clockspec in your next time relative query to get a race free assessment of
+changed files.</p>
+
+<p>As a convenience, watchman can maintain the last observed clock for a client by
+associating it with a client defined cursor name.  For example, you could
+enumerate all the &quot;C&quot; source files on your first invocation of:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash">watchman since /path/to/src n:c_srcs <span class="s1">&#39;*.c&#39;</span>
+</code></pre></div>
+<p>and when you run it a second time, it will show you only the &quot;C&quot; source files
+that changed since the last time that someone queried using &quot;n:c_srcs&quot; as the
+clock spec. However, it&#39;s not possible to &quot;roll back&quot; a named cursor, so
+advanced users desiring such functionality should use clock ids instead.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/clock.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/clock.html
@@ -0,0 +1,739 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/clock.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="clock" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>clock</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/clock.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "clock",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">clock</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Returns the current clock value for a watched root.</p>
+
+<p>Be careful how you interpret this value; it returns the instantaneous value of
+the clock, and may have changed by the time you intend to act upon it.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman clock /path/to/dir
+</code></pre></div>
+<p>JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;clock&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/dir&quot;</span><span class="p">]</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/find.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/find.html
@@ -0,0 +1,734 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/find.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="find" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>find</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/find.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "find",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">find</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Finds all files that match the optional list of patterns under the
+specified dir.  If no patterns were specified, all files are returned.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman find /path/to/dir <span class="o">[</span>patterns<span class="o">]</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/get-config.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/get-config.html
@@ -0,0 +1,758 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/get-config.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="get-config" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>get-config</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/get-config.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "get-config",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">get-config</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>get-config</code> command returns the <code>.watchmanconfig</code> for the root.
+If there is no <code>.watchmanconfig</code>, it returns an empty configuration field:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman get-config .
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;2.9.9&quot;</span>,
+    <span class="s2">&quot;config&quot;</span>: <span class="o">{}</span>
+<span class="o">}</span>
+</code></pre></div><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman get-config /path/to/root
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;2.9.9&quot;</span>,
+    <span class="s2">&quot;config&quot;</span>: <span class="o">{</span>
+        <span class="s2">&quot;ignore_dirs&quot;</span>: <span class="o">[</span>
+            <span class="s2">&quot;buck-out&quot;</span>
+        <span class="o">]</span>
+    <span class="o">}</span>
+<span class="o">}</span>
+</code></pre></div>
+<p>Note that watchman only reads the <code>.watchmanconfig</code> file when the watch is
+established.  If changes are made after that point, the <code>get-config</code> response
+will not reflect them.</p>
+
+<p>See <a href="/watchman/docs/config.html#configuration-options">Configuration Options</a>
+for details on valid contents of the <code>config</code> field.  Note that the values
+returned by <code>get-config</code> are passed straight through from the <code>.watchmanconfig</code>
+file, and thus may contain fields that are not strictly legal.</p>
+
+<p>This command is available since watchman version 2.9.9.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/get-sockname.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/get-sockname.html
@@ -0,0 +1,742 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/get-sockname.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="get-sockname" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>get-sockname</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/get-sockname.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "get-sockname",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">get-sockname</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>If you&#39;re integrating against watchman using the unix socket and either the
+JSON or BSER protocol, you may need to discover the correct socket path.
+Rather than hard-coding the path or replicating the logic discussed in
+<a href="/watchman/docs/cli-options.html">Command Line</a>, you can simply execute the
+CLI to determine the path.  This has the side effect of spawning the service
+for your user if it was not already running--bonus!</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman get-sockname
+<span class="o">{</span>
+  <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;2.5&quot;</span>,
+  <span class="s2">&quot;sockname&quot;</span>: <span class="s2">&quot;/tmp/.watchman.wez&quot;</span>
+<span class="o">}</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/list-capabilities.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/list-capabilities.html
@@ -0,0 +1,749 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/list-capabilities.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="list-capabilities" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>list-capabilities</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/list-capabilities.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "list-capabilities",
+        currentGroup: "",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">list-capabilities</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>Since 3.8.</em></p>
+
+<p>This command returns the full list of supported <a href="/watchman/docs/capabilities.html">capabilities</a> offered by the watchman server.  The
+intention is that client applications will use the
+<a href="/watchman/docs/cmd/version.html">expanded version command</a> to check
+compatibility rather than interrogating the full list.</p>
+
+<p>Here&#39;s some example output.  The actual capabilities list is in unspecified
+order and is much longer than is reproduced here:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman list-capabilities
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;3.8.0&quot;</span>,
+    <span class="s2">&quot;capabilities&quot;</span>: <span class="o">[</span>
+        <span class="s2">&quot;field-mode&quot;</span>,
+        <span class="s2">&quot;term-allof&quot;</span>,
+        <span class="s2">&quot;cmd-trigger&quot;</span>
+    <span class="o">]</span>
+<span class="o">}</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/log-level.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/log-level.html
@@ -0,0 +1,760 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/log-level.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="log-level" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>log-level</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/log-level.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "log-level",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">log-level</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Changes the log level of your connection to the watchman service.</p>
+
+<p>From the command line:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman --server-encoding<span class="o">=</span>json --persistent log-level debug
+</code></pre></div>
+<p>JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;log-level&quot;</span><span class="p">,</span> <span class="s2">&quot;debug&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>This command changes the log level of your client session.  Whenever watchman
+writes to its log, it walks the list of client sessions and also sends a log
+packet to any that have their log level set to match the current log event.</p>
+
+<p>Valid log levels are:</p>
+
+<ul>
+<li><code>debug</code> - receive all log events</li>
+<li><code>error</code> - receive only important log events</li>
+<li><code>off</code>   - receive no log events</li>
+</ul>
+
+<p>Note that you cannot tap into the output of triggered processes using this
+mechanism.</p>
+
+<p>Log events are sent unilaterally by the server as they happen, and have
+the following structure:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+  <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;1.0&quot;</span><span class="p">,</span>
+  <span class="nt">&quot;log&quot;</span><span class="p">:</span> <span class="s2">&quot;log this please&quot;</span>
+<span class="p">}</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/log.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/log.html
@@ -0,0 +1,733 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/log.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="log" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>log</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/log.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "log",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">log</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Generates a log line in the watchman log.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman log debug <span class="s2">&quot;log this please&quot;</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/query.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/query.html
@@ -0,0 +1,841 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/query.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="query" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>query</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/query.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "query",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">query</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>Since 1.6.</em></p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;query&quot;, &quot;/path/to/root&quot;, {</span>
+<span class="s">  &quot;suffix&quot;: &quot;php&quot;,</span>
+<span class="s">  &quot;expression&quot;: [&quot;allof&quot;,</span>
+<span class="s">    [&quot;type&quot;, &quot;f&quot;],</span>
+<span class="s">    [&quot;not&quot;, &quot;empty&quot;],</span>
+<span class="s">    [&quot;ipcre&quot;, &quot;test&quot;, &quot;basename&quot;]</span>
+<span class="s">  ],</span>
+<span class="s">  &quot;fields&quot;: [&quot;name&quot;]</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+<p>Executes a query against the specified root. This example uses the <code>-j</code> flag to
+the watchman binary that tells it to read stdin and interpret it as the JSON
+request object to send to the watchman service.  This flag allows you to send
+in a pretty JSON object (as shown above), but if you&#39;re using the socket
+interface you must still format the object as a single line JSON request as
+documented in the protocol spec.</p>
+
+<p>The first argument to query is the path to the watched root.  The second
+argument holds a JSON object describing the query to be run.  The query object
+is processed by passing it to the query engine (see <a href="/watchman/docs/file-query.html">File Queries</a>) which will generate a set of matching files.</p>
+
+<p>The query command will then consult the <code>fields</code> member of the query object;
+if it is not present it will default to:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="s2">&quot;fields&quot;</span><span class="err">:</span> <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;exists&quot;</span><span class="p">,</span> <span class="s2">&quot;new&quot;</span><span class="p">,</span> <span class="s2">&quot;size&quot;</span><span class="p">,</span> <span class="s2">&quot;mode&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>For each file in the result set, the query command will generate a JSON object
+value populated with the requested fields.  For example, the default set of
+fields will return a response something like this:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+    <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;2.9&quot;</span><span class="p">,</span>
+    <span class="nt">&quot;clock&quot;</span><span class="p">:</span> <span class="s2">&quot;c:80616:59&quot;</span><span class="p">,</span>
+    <span class="nt">&quot;is_fresh_instance&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
+    <span class="nt">&quot;files&quot;</span><span class="p">:</span> <span class="p">[</span>
+        <span class="p">{</span>
+            <span class="nt">&quot;exists&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
+            <span class="nt">&quot;mode&quot;</span><span class="p">:</span> <span class="mi">33188</span><span class="p">,</span>
+            <span class="nt">&quot;new&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
+            <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;argv.c&quot;</span><span class="p">,</span>
+            <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="mi">1340</span><span class="p">,</span>
+        <span class="p">}</span>
+    <span class="p">]</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>For queries using the <code>since</code> generator, the <code>is_fresh_instance</code> member is true
+if the particular clock value indicates that it was returned by a different
+instance of watchman, or a named cursor hasn&#39;t been seen before. In that case,
+only files that currently exist will be returned, and all files will have <code>new</code>
+set to <code>true</code>. For all other queries, is_fresh_instance will always be true.
+Advanced users may set the input parameter <code>empty_on_fresh_instance</code> to true,
+in which case no files will be returned for fresh instances.</p>
+
+<p>If the <code>fields</code> member consists of a single entry, the files result will be a
+simple array of values; <code>&quot;fields&quot;: [&quot;name&quot;]</code> produces:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+    <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;1.5&quot;</span><span class="p">,</span>
+    <span class="nt">&quot;clock&quot;</span><span class="p">:</span> <span class="s2">&quot;c:80616:59&quot;</span><span class="p">,</span>
+    <span class="nt">&quot;files&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;argv.c&quot;</span><span class="p">,</span> <span class="s2">&quot;foo.c&quot;</span><span class="p">]</span>
+<span class="p">}</span>
+</code></pre></div>
+<h3 id="available-fields">Available fields</h3>
+
+<ul>
+<li><code>name</code> - string: the filename, relative to the watched root</li>
+<li><code>exists</code> - bool: true if the file exists, false if it has been deleted</li>
+<li><code>cclock</code> - string: the &quot;created clock&quot;; the clock value when we first
+observed the file, or the clock value when it last switched from
+!exists to exists.</li>
+<li><code>oclock</code> - string: the &quot;observed clock&quot;; the clock value where we last
+observed some change in this file or its metadata.</li>
+<li><code>ctime</code>, <code>ctime_ms</code>, <code>ctime_us</code>, <code>ctime_ns</code>, <code>ctime_f</code> -
+last inode change time measured in integer seconds, milliseconds,
+microseconds, nanoseconds or floating point seconds respectively.</li>
+<li><code>mtime</code>, <code>mtime_ms</code>, <code>mtime_us</code>, <code>mtime_ns</code>, <code>mtime_f</code> -
+modified time measured in integer seconds, milliseconds,
+microseconds, nanoseconds or floating point seconds respectively.</li>
+<li><code>size</code> - integer: file size in bytes</li>
+<li><code>mode</code> - integer: file (or directory) mode expressed as a decimal integer</li>
+<li><code>uid</code> - integer: the owning uid</li>
+<li><code>gid</code> - integer: the owning gid</li>
+<li><code>ino</code> - integer: the inode number</li>
+<li><code>dev</code> - integer: the device number</li>
+<li><code>nlink</code> - integer: number of hard links</li>
+<li><code>new</code> - bool: whether this entry is newer than the <code>since</code> generator criteria</li>
+<li><code>type</code> - string: the file type. (Available since version 3.1).  Has the
+the values listed in <a href="../expr/type.html">the type query expression</a></li>
+</ul>
+
+<h3 id="synchronization-timeout-since-2-1">Synchronization timeout (since 2.1)</h3>
+
+<p>By default a <code>query</code> will wait for up to 2 seconds for the view of the
+filesystem to become current.  Watchman decides that the view is current by
+creating a cookie file and waiting to observe the notification that it is
+present.  If the cookie is not observed within the sync_timeout period then the
+query invocation will error out with a synchronization error message.</p>
+
+<p>If your synchronization requirements differ from the default, you may pass in
+your desired timeout when you construct your query; it must be an integer value
+expressed in milliseconds:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;query&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/root&quot;</span><span class="p">,</span> <span class="p">{</span>
+  <span class="nt">&quot;expression&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;exists&quot;</span><span class="p">],</span>
+  <span class="nt">&quot;fields&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">],</span>
+  <span class="nt">&quot;sync_timeout&quot;</span><span class="p">:</span> <span class="mi">2000</span>
+<span class="p">}]</span>
+</code></pre></div>
+<p>You may specify <code>0</code> as the value if you do not wish for the query to create
+a cookie and synchronize; the query will be evaluated over the present view
+of the tree, which may lag behind the present state of the filesystem.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/shutdown-server.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/shutdown-server.html
@@ -0,0 +1,733 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/shutdown-server.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="shutdown-server" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>shutdown-server</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/shutdown-server.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "shutdown-server",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">shutdown-server</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>This command causes your watchman service to exit with a normal status code.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman shutdown-server
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/since.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/since.html
@@ -0,0 +1,780 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/since.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="since" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>since</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/since.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "since",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">since</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman since /path/to/dir &lt;clockspec&gt; <span class="o">[</span>patterns<span class="o">]</span>
+</code></pre></div>
+<p>Finds all files that were modified since the specified clockspec that
+match the optional list of patterns.  If no patterns are specified,
+all modified files are returned.</p>
+
+<p>The response includes a <code>files</code> array, each element of which is an
+object with fields containing information about the file:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+    <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;2.7&quot;</span><span class="p">,</span>
+    <span class="nt">&quot;is_fresh_instance&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
+    <span class="nt">&quot;clock&quot;</span><span class="p">:</span> <span class="s2">&quot;c:80616:59&quot;</span><span class="p">,</span>
+    <span class="nt">&quot;files&quot;</span><span class="p">:</span> <span class="p">[</span>
+        <span class="p">{</span>
+            <span class="nt">&quot;cclock&quot;</span><span class="p">:</span> <span class="s2">&quot;c:80616:1&quot;</span><span class="p">,</span>
+            <span class="nt">&quot;ctime&quot;</span><span class="p">:</span> <span class="mi">1357617635</span><span class="p">,</span>
+            <span class="nt">&quot;dev&quot;</span><span class="p">:</span> <span class="mi">16777220</span><span class="p">,</span>
+            <span class="nt">&quot;exists&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
+            <span class="nt">&quot;gid&quot;</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
+            <span class="nt">&quot;ino&quot;</span><span class="p">:</span> <span class="mi">20161390</span><span class="p">,</span>
+            <span class="nt">&quot;mode&quot;</span><span class="p">:</span> <span class="mi">33188</span><span class="p">,</span>
+            <span class="nt">&quot;mtime&quot;</span><span class="p">:</span> <span class="mi">1357617635</span><span class="p">,</span>
+            <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;argv.c&quot;</span><span class="p">,</span>
+            <span class="nt">&quot;nlink&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
+            <span class="nt">&quot;oclock&quot;</span><span class="p">:</span> <span class="s2">&quot;c:80616:39&quot;</span><span class="p">,</span>
+            <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="mi">1340</span><span class="p">,</span>
+            <span class="nt">&quot;uid&quot;</span><span class="p">:</span> <span class="mi">100</span>
+        <span class="p">}</span>
+    <span class="p">]</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>The fields should be largely self-explanatory; they correspond to
+fields from the underlying <code>struct stat</code>, but a couple need special
+mention:</p>
+
+<ul>
+<li><strong>cclock</strong> - The &quot;created&quot; clock; the clock value representing the time that
+this file was first observed, or the clock value where this file changed from
+deleted to non-deleted state.</li>
+<li><strong>oclock</strong> - The &quot;observed&quot; clock; the clock value representing the time
+that this file was last observed to have changed.</li>
+<li><strong>exists</strong> - whether we believe that the file exists on disk or not.  If
+this is false, most of the other fields will be omitted.</li>
+<li><strong>new</strong> - this is only set in cases where the file results were generated as
+part of a time or clock based query, such as the <code>since</code> command.  If the
+<code>cclock</code> value for the file is newer than the time you specified then the file
+entry is marked as <code>new</code>.  This allows you to more easily determine if the file
+was newly created without having to maintain a lot of state.</li>
+</ul>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/subscribe.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/subscribe.html
@@ -0,0 +1,819 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/subscribe.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="subscribe" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>subscribe</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/subscribe.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "subscribe",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">subscribe</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>Since 1.6</em></p>
+
+<p>Subscribes to changes against a specified root and requests that they be sent
+to the client via its connection.  The updates will continue to be sent while
+the connection is open.  If the connection is closed, the subscription is
+implicitly removed.</p>
+
+<p>This makes the most sense in an application connecting via the socket
+interface, but you may also subscribe via the command line tool if you&#39;re
+interested in observing the changes for yourself:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j --server-encoding<span class="o">=</span>json -p <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;subscribe&quot;, &quot;/path/to/root&quot;, &quot;mysubscriptionname&quot;, {</span>
+<span class="s">  &quot;expression&quot;: [&quot;allof&quot;,</span>
+<span class="s">    [&quot;type&quot;, &quot;f&quot;],</span>
+<span class="s">    [&quot;not&quot;, &quot;empty&quot;],</span>
+<span class="s">    [&quot;suffix&quot;, &quot;php&quot;]</span>
+<span class="s">  ],</span>
+<span class="s">  &quot;fields&quot;: [&quot;name&quot;]</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+<p>The example above registers a subscription against the specified root with the
+name <code>mysubscriptionname</code>.</p>
+
+<p>The response to a subscribe command looks like this:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+  <span class="nt">&quot;version&quot;</span><span class="p">:</span>   <span class="s2">&quot;1.6&quot;</span><span class="p">,</span>
+  <span class="nt">&quot;subscribe&quot;</span><span class="p">:</span> <span class="s2">&quot;mysubscriptionname&quot;</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>When the subscription is first established, the
+expression term is evaluated and if any files match, a subscription notification
+packet is generated and sent, unilaterally to the client.</p>
+
+<p>Then, each time a change is observed, and after the settle period has passed,
+the expression is evaluated again.  If any files are matched, the server will
+unilaterally send the query results to the client with a packet that looks like
+this:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+  <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;1.6&quot;</span><span class="p">,</span>
+  <span class="nt">&quot;clock&quot;</span><span class="p">:</span> <span class="s2">&quot;c:1234:123&quot;</span><span class="p">,</span>
+  <span class="nt">&quot;files&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;one.php&quot;</span><span class="p">],</span>
+  <span class="nt">&quot;root&quot;</span><span class="p">:</span>  <span class="s2">&quot;/path/being/watched&quot;</span><span class="p">,</span>
+  <span class="nt">&quot;subscription&quot;</span><span class="p">:</span> <span class="s2">&quot;mysubscriptionname&quot;</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>The subscribe command object allows the client to specify a since parameter; if
+present in the command, the initial set of subscription results will only
+include files that changed since the specified clockspec, equivalent to using
+the <code>query</code> command with the <code>since</code> generator.</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;subscribe&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/root&quot;</span><span class="p">,</span> <span class="s2">&quot;myname&quot;</span><span class="p">,</span> <span class="p">{</span>
+  <span class="nt">&quot;since&quot;</span><span class="p">:</span> <span class="s2">&quot;c:1234:123&quot;</span><span class="p">,</span>
+  <span class="nt">&quot;expression&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;not&quot;</span><span class="p">,</span> <span class="s2">&quot;empty&quot;</span><span class="p">],</span>
+  <span class="nt">&quot;fields&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span>
+<span class="p">}]</span>
+</code></pre></div>
+<p>The suggested mode of operation is for the client process to maintain its own
+local copy of the last &quot;clock&quot; value and use that to establish the subscription
+when it first connects.</p>
+
+<h2 id="filesystem-settling">Filesystem Settling</h2>
+
+<p>Prior to watchman version 3.2, the settling behavior was to hold subscription
+notifications until the kernel notification stream was complete.</p>
+
+<p>Starting in watchman version 3.2, after the notification stream is complete, if
+the root appears to be a version control directory, subscription notifications
+will be held until an outstanding version control operation is complete (at the
+time of writing, this is based on the presence of either <code>.hg/wlock</code> or
+<code>.git/index.lock</code>).  This behavior matches triggers and helps to avoid
+performing transient work in response to files changing, for example, during a
+rebase operation.</p>
+
+<p>In some circumstances it is desirable for a client to observe the creation of
+the control files at the start of a version control operation.  You may specify
+that you want this behavior by passing the <code>defer_vcs</code> flag to your subscription
+command invocation:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j -p <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;subscribe&quot;, &quot;/path/to/root&quot;, &quot;mysubscriptionname&quot;, {</span>
+<span class="s">  &quot;expression&quot;: [&quot;allof&quot;,</span>
+<span class="s">    [&quot;type&quot;, &quot;f&quot;],</span>
+<span class="s">    [&quot;not&quot;, &quot;empty&quot;],</span>
+<span class="s">    [&quot;suffix&quot;, &quot;php&quot;]</span>
+<span class="s">  ],</span>
+<span class="s">  &quot;defer_vcs&quot;: false,</span>
+<span class="s">  &quot;fields&quot;: [&quot;name&quot;]</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/trigger-del.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/trigger-del.html
@@ -0,0 +1,734 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/trigger-del.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="trigger-del" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>trigger-del</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/trigger-del.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "trigger-del",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">trigger-del</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Deletes a named trigger from the list of registered triggers.  This disables
+and removes the trigger from both the in-memory and the saved state lists.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman trigger-del /root triggername
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/trigger-list.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/trigger-list.html
@@ -0,0 +1,737 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/trigger-list.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="trigger-list" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>trigger-list</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/trigger-list.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "trigger-list",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">trigger-list</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Returns the set of registered triggers associated with a root directory.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman trigger-list /root
+</code></pre></div>
+<p>Note that the format of the output from <code>trigger-list</code> changed in Watchman
+version 2.9.7.  It will now output a list of trigger objects as defined
+by the <code>trigger</code> command.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/trigger.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/trigger.html
@@ -0,0 +1,976 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/trigger.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="trigger" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>trigger</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/trigger.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "trigger",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">trigger</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The trigger command will create or replace a trigger.</p>
+
+<p>A trigger is a saved incremental query over a watched root.  When files
+change that match the query expression, Watchman will spawn a process and
+pass information about the changed files to it.</p>
+
+<p>Triggered processes are spawned by the Watchman server process that runs in
+the background; they do not have access to your terminal and their
+output is redirected (by default) to the Watchman log file.</p>
+
+<p>Watchman waits for the filesystem to settle before processing any
+triggers, batching the list of changed files together before invoking
+the registered command.  You can adjust the settle period via the
+<code>.watchmanconfig</code> file.</p>
+
+<p>Note that deleted files are counted as changed files and are passed the command
+in exactly the same way as changed-but-existing files.</p>
+
+<p>Watchman will only run a single instance of the trigger process at a time.
+That avoids fork-bomb style behavior in cases where your trigger also modifies
+files.  When the process terminates, watchman will re-evaluate the trigger
+criteria based on the clock at the time the process was last spawned; if
+a file list is generated watchman will spawn a new child with the files
+that changed in the meantime.</p>
+
+<p>Unless <code>no-save-state</code> is in use, triggers are saved and re-established
+across a Watchman process restart.  If you had triggeres saved prior to
+upgrading to Watchman 2.9.7, those triggers will be forgotten as you upgrade
+past version 2.9.7; you will need to re-register them.</p>
+
+<p>There are two syntaxes for registering triggers; a simple syntax that allows
+very simple trigger configuration with some reasonable defaults, and a second
+extended syntax which is available since Watchman version 2.9.7.</p>
+
+<p>The simple syntax is implemented in terms of the extended syntax and is
+preserved for backwards compatibility with older clients.</p>
+
+<h3 id="extended-syntax">Extended syntax</h3>
+
+<p><em>Since 2.9.7.</em></p>
+
+<p>You may use the extended JSON trigger definition syntax detailed below.  It
+provides more control over how the triggered commands are invoked than was
+possible in earlier versions.</p>
+
+<p>JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;trigger&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/dir&quot;</span><span class="p">,</span> <span class="err">&lt;triggerobj&gt;</span><span class="p">]</span>
+</code></pre></div>
+<p>Where <code>triggerobj</code> is a trigger configuration object with the fields
+defined below.</p>
+
+<p>Here&#39;s an example trigger specified via the CLI that will cause <code>make</code> to
+be run whenever assets or sources are changed:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;trigger&quot;, &quot;/path/to/root&quot;, {</span>
+<span class="s">  &quot;name&quot;: &quot;assets&quot;,</span>
+<span class="s">  &quot;expression&quot;: [&quot;pcre&quot;, &quot;\.(js|css|c|cpp)$&quot;],</span>
+<span class="s">  &quot;command&quot;: [&quot;make&quot;]</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+<p>The possible trigger object properties are:</p>
+
+<ul>
+<li><p><code>name</code> defines the name of the trigger.  You may use this name to
+remove the trigger later.  Registering a different trigger with the same name
+as an existing trigger will implicitly delete the old trigger and then
+register the new one, causing the trigger expression to be evaluated for the
+whole tree.</p></li>
+<li><p><code>command</code> specifies the command to invoke.  It must be an array of string
+values; this will form the argv array of the trigger process.  When
+the trigger is spawned, the <code>$PATH</code> of the Watchman process will be used
+to locate the command.  If you have changed your <code>$PATH</code> since the Watchman
+process was started, Watchman won&#39;t be able to see your new <code>$PATH</code>.
+If you are registering trigger that runs something from an unusual or
+non-default location, it is recommended that you specify the full path
+to that command.  If you are registering a trigger script that can
+be found in the watched root, just specify the path relative to the
+root.</p></li>
+<li><p><code>append_files</code> is an optional boolean parameter; if enabled, the <code>command</code>
+array will have the set of matching file names appended when the trigger
+is invoked.  System limits such as <code>sysconf(_SC_ARG_MAX)</code>
+and/or <code>RLIMIT_STACK</code> set an upper bound on the size of the parameters
+and environment that are passed to a spawned process.  Watchman will
+try to ensure that the command is runnable by keeping the number of
+file name arguments below the system limits.  If the full set cannot be
+passed to the process, Watchman will pass as many as it thinks will fit and
+omit the rest.  When this argument list truncation occurs, Watchman will
+export <code>WATCHMAN_FILES_OVERFLOW=true</code> into the environment so that the child
+process can determine that this has happened.  Watchman cannot break
+the arguments apart and run multiple processes for each argument batch;
+for that functionality, use <code>xargs(1)</code> for the <code>command</code> and set the
+<code>stdin</code> property to <code>NAME_PER_LINE</code>.</p></li>
+<li><p><code>expression</code> accepts a query expression.  The expression is applied
+to the list of changed files to generate the set of files that are
+relevant to this trigger.  If no files match, the command will not be
+invoked.  Omitting the expression will match all changed files.</p></li>
+<li><p><code>stdin</code> specifies how stdin should be configured for the command
+invocation.  You may set the value of this property to one of the following:</p>
+
+<ul>
+<li>the string value <code>/dev/null</code> - sets stdin to read from <code>/dev/null</code>.
+This is the default and will be used if you omit the <code>stdin</code> property.</li>
+<li>an array value will be interpreted as a list of field names.  When
+the command is invoked, Watchman will generate an array of JSON objects
+that contain those field names on stdin.  For example, if <code>stdin</code> is set
+to <code>[&quot;name&quot;, &quot;size&quot;]</code>, stdin will be a JSON array containing the list
+of changed files, represented as objects with the <code>name</code> and <code>size</code>
+properties: <code>[{&quot;name&quot;: &quot;filename.txt&quot;, &quot;size&quot;: 123}]</code>.
+The list of valid fields is the same as the same as that
+documented in the <code>query</code> command.  Just as with the <code>query</code> command,
+if the field list is comprised of a single field then the JSON
+will be an array of those field values.  For instance, if you set
+<code>stdin</code> to <code>[&quot;name&quot;]</code> the JSON will be of the form <code>[&quot;filename.txt&quot;]</code>
+instead of <code>[{&quot;name&quot;: &quot;filename.txt&quot;}]</code>.</li>
+<li>the string value <code>NAME_PER_LINE</code> will cause Watchman to generate a list
+of file names on stdin, one name per line.  No quoting will be applied to
+the names, and they may contain spaces.</li>
+</ul></li>
+<li><p><code>stdout</code> and <code>stderr</code> control the output and error streams.  If omitted,
+the corresponding stream will be inherited from the Watchman process, which
+typically means that the command output/error stream will show up in the
+Watchman log file.  If specified, the value must be a string:</p>
+
+<ul>
+<li><code>&gt;path/to/file</code> - causes output to redirected to the specifie file.
+The path is relative to the watched root, and will be truncated
+prior to being written to, if it exists, or created if it does not
+exist.</li>
+<li><code>&gt;&gt;path/to/file</code> - causes output to redirected to the specifie file.
+The path is relative to the watched root.  If the file already exists
+then it will be appended to.  The file will be created if it does not
+exist.</li>
+</ul></li>
+<li><p><code>max_files_stdin</code> specifies a limit on the number of files reported on
+stdin when stdin is set to hold the set of matched files.  If the number of
+files that matched exceeds this limit, the input will be truncated to match
+this limit and <code>WATCHMAN_FILES_OVERFLOW=true</code> will also be exported into the
+environment.  The default, if omitted, is no limit.</p></li>
+<li><p><code>chdir</code> can be used to specify the working directory that should be set
+prior to spawning the process.  The default is to set the working directory
+to the watched root.  The value of this property is a string that will be
+interpreted relative to the watched root.  Note that changing the working dir
+does not cause the file names from the query result to be re-written: they
+will <em>always</em> be relative to the watched root.  The path to the root can
+be found in the <code>$WATCHMAN_ROOT</code> environmental variable.</p></li>
+</ul>
+
+<h3 id="simple-syntax">Simple syntax</h3>
+
+<p>The simple syntax is easier to execute from the CLI than the JSON based
+extended syntax, but doesn&#39;t allow all of the trigger options to be set.
+In only supports the <a href="/watchman/docs/simple-query.html">Simple Pattern Syntax</a> for queries.</p>
+
+<p>From the command line:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -- trigger /path/to/dir triggername <span class="o">[</span>patterns<span class="o">]</span> -- <span class="o">[</span>cmd<span class="o">]</span>
+</code></pre></div>
+<p>Note that the first <code>--</code> is to distinguish watchman CLI switches from the
+second <code>--</code>, which delimits patterns from the trigger command.  This is only
+needed when using the CLI, not when using the JSON protocol.</p>
+
+<p>JSON:
+<code>json
+[&quot;trigger&quot;, &quot;/path/to/dir&quot;, &quot;triggername&quot;, &lt;patterns&gt;, &quot;--&quot;, &lt;cmd&gt;]
+</code></p>
+
+<p>For example:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -- trigger ~/www jsfiles <span class="s1">&#39;*.js&#39;</span> -- ls -l
+</code></pre></div>
+<p>Note the single quotes around the <code>*.js</code>; if you omit them, your shell
+will expand it to a list of file names and register those in the trigger.
+While this would work, any <code>*.js</code> files that you add after registering the
+trigger will not cause the trigger to run.</p>
+
+<p>or in JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;trigger&quot;</span><span class="p">,</span> <span class="s2">&quot;/home/wez/www&quot;</span><span class="p">,</span> <span class="s2">&quot;jsfiles&quot;</span><span class="p">,</span> <span class="s2">&quot;*.js&quot;</span><span class="p">,</span> <span class="s2">&quot;--&quot;</span><span class="p">,</span> <span class="s2">&quot;ls&quot;</span><span class="p">,</span> <span class="s2">&quot;-l&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>The simple syntax is interpreted as a trigger object with the following
+settings:</p>
+
+<ul>
+<li><code>name</code> is set to the <code>triggername</code></li>
+<li><code>command</code> is set to the <code>&lt;cmd&gt;</code> list</li>
+<li><code>expression</code> is generated from the <code>&lt;patterns&gt;</code> list using the rules laid
+out in <a href="/watchman/docs/simple-query.html">Simple Pattern Syntax</a></li>
+<li><code>append_files</code> is set to <code>true</code></li>
+<li><code>stdin</code> is set to <code>[&quot;name&quot;, &quot;exists&quot;, &quot;new&quot;, &quot;size&quot;, &quot;mode&quot;]</code></li>
+<li><code>stdout</code> and <code>stderr</code> will be set to output to the Watchman log file</li>
+<li><code>max_files_stdin</code> will be left unset</li>
+</ul>
+
+<p>For this simple example, if <code>~/www/scripts/foo.js</code> is changed,
+watchman will chdir to <code>~/www</code> then invoke <code>ls -l scripts/foo.js</code>.  Note that
+the output will show up in the Watchman log file, not in your terminal.</p>
+
+<h3 id="environment-for-trigger-commands">Environment for trigger commands</h3>
+
+<p>Since Watchman version 2.9.7, the following environment variables are set
+for all trigger commands, even those registered using the simple trigger
+syntax:</p>
+
+<ul>
+<li><code>WATCHMAN_FILES_OVERFLOW</code> is set to <code>true</code> if the number of files exceeds
+either the <code>max_files_stdin</code> limit or the system argument size limit.</li>
+<li><code>WATCHMAN_CLOCK</code> is set to the current clock at the time of the trigger
+invocation</li>
+<li><code>WATCHMAN_SINCE</code> is set to the clock value of the prior trigger invocation,
+or unset if this is the first trigger invocation.</li>
+<li><code>WATCHMAN_ROOT</code> is set to the path to the watched root</li>
+<li><code>WATCHMAN_TRIGGER</code> is set to the name of the trigger</li>
+<li><code>WATCHMAN_SOCK</code> is set to the path to the Watchman socket, so that you
+can figure out how to connect back to Watchman.</li>
+</ul>
+
+<h3 id="relative-roots">Relative roots</h3>
+
+<p><em>Since 3.4.</em></p>
+
+<p>Watchman supports optionally evaluating triggers with respect to a path within a
+watched root. This is used with the <code>relative_root</code> parameter:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;trigger&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/watched/root&quot;</span><span class="p">,</span> <span class="p">{</span>
+  <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;relative-assets&quot;</span><span class="p">,</span>
+  <span class="nt">&quot;expression&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;pcre&quot;</span><span class="p">,</span> <span class="s2">&quot;\.(js|css|c|cpp)$&quot;</span><span class="p">],</span>
+  <span class="nt">&quot;command&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;make&quot;</span><span class="p">],</span>
+  <span class="nt">&quot;relative_root&quot;</span><span class="p">:</span> <span class="s2">&quot;project1&quot;</span>
+<span class="p">}]</span>
+</code></pre></div>
+<p>Setting a relative root results in the following modifications to triggers:</p>
+
+<ul>
+<li>Queries are evaluated with respect to the relative root. See
+<a href="/watchman/docs/file-query.html">File Queries</a> for more.</li>
+<li>The current directory for triggered processes is set to the relative root,
+unless it is changed with <code>chdir</code>. If <code>chdir</code> is a relative path then it will
+be evaluated with respect to the relative root. So, for the example trigger
+above, if <code>chdir</code> is <code>&quot;subdir2&quot;</code>, the current directory for triggered <code>make</code>
+invocations is <code>/path/to/watched/root/project1/subdir2</code>.</li>
+<li>In the environment, <code>WATCHMAN_ROOT</code> is still set to the actual root.</li>
+<li><code>WATCHMAN_RELATIVE_ROOT</code> is set to the full path of the relative root.</li>
+</ul>
+
+<p>Relative roots behave similarly to a separate Watchman watch on the
+subdirectory, without any of the system overhead that that imposes. This is
+useful for large repositories, where your script or tool is only interested in a
+particular directory inside the repository.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/unsubscribe.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/unsubscribe.html
@@ -0,0 +1,736 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/unsubscribe.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="unsubscribe" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>unsubscribe</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/unsubscribe.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "unsubscribe",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">unsubscribe</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Available starting in version 1.6</p>
+
+<p>Cancels a named subscription against the specified root.  The server side
+will no longer generate subscription packets for the specified subscription.</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;unsubscribe&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/root&quot;</span><span class="p">,</span> <span class="s2">&quot;mysubscriptionname&quot;</span><span class="p">]</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/version.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/version.html
@@ -0,0 +1,827 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/version.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="version" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>version</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/version.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "version",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">version</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The version command will tell you the version and build information
+for the currently running watchman service:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman version
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;2.9.6&quot;</span>,
+    <span class="s2">&quot;buildinfo&quot;</span>: <span class="s2">&quot;git:2727d9a1e47a4a2229c65cbb2f0c7656cbd96270&quot;</span>
+<span class="o">}</span>
+</code></pre></div>
+<p>To get the version of the client:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -v
+2.9.8
+</code></pre></div>
+<p>If the server and client versions don&#39;t match up, you should probably
+restart your server: <code>watchman shutdown-server ; watchman</code>.</p>
+
+<h3 id="capabilities">Capabilities</h3>
+
+<p><em>Since 3.8.</em></p>
+
+<p>The version command can be used to check for named capabilities.
+Capabilities make it easier to check whether the server implements
+functionality based on the name of that function rather than by
+having the client build up knowledge about when those functions
+were introduced.</p>
+
+<p>You can read more about the <a href="/watchman/docs/capabilities.html">available capability names</a>.</p>
+
+<p>To check whether the <code>relative_root</code> capability is supported:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="o">&lt;&lt;&lt;</span> <span class="s1">&#39;[&quot;version&quot;, {&quot;optional&quot;:[&quot;relative_root&quot;]}]&#39;</span>
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;3.8.0&quot;</span>,
+    <span class="s2">&quot;capabilities&quot;</span>: <span class="o">{</span>
+        <span class="s2">&quot;relative_root&quot;</span>: <span class="nb">true</span>
+    <span class="o">}</span>
+<span class="o">}</span>
+</code></pre></div>
+<p>If the capability is not supported:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="o">&lt;&lt;&lt;</span> <span class="s1">&#39;[&quot;version&quot;, {&quot;optional&quot;:[&quot;will-never-exist&quot;]}]&#39;</span>
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;3.8.0&quot;</span>,
+    <span class="s2">&quot;capabilities&quot;</span>: <span class="o">{</span>
+        <span class="s2">&quot;will-never-exist&quot;</span>: <span class="nb">false</span>
+    <span class="o">}</span>
+<span class="o">}</span>
+</code></pre></div>
+<p>To have the server generate an error response if a capability is not
+supported:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="o">&lt;&lt;&lt;</span> <span class="s1">&#39;[&quot;version&quot;, {&quot;required&quot;:[&quot;will-never-exist&quot;]}]&#39;</span>
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;3.8.0&quot;</span>,
+    <span class="s2">&quot;capabilities&quot;</span>: <span class="o">{</span>
+        <span class="s2">&quot;will-never-exist&quot;</span>: <span class="nb">false</span>
+    <span class="o">}</span>,
+    <span class="s2">&quot;error&quot;</span>: <span class="s2">&quot;client required capability `will-never-exist` is not supported by this server&quot;</span>
+<span class="o">}</span>
+</code></pre></div>
+<p>To require one feature and test whether some optional features are supported:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="o">&lt;&lt;&lt;</span> <span class="s1">&#39;[&quot;version&quot;, {&quot;required&quot;:[&quot;term-match&quot;],&quot;optional&quot;:[&quot;a&quot;,&quot;b&quot;]}]&#39;</span>
+<span class="o">{</span>
+    <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;3.8.0&quot;</span>,
+    <span class="s2">&quot;capabilities&quot;</span>: <span class="o">{</span>
+        <span class="s2">&quot;a&quot;</span>: <span class="nb">false</span>,
+        <span class="s2">&quot;b&quot;</span>: <span class="nb">false</span>,
+        <span class="s2">&quot;term-match&quot;</span>: <span class="nb">true</span>
+    <span class="o">}</span>
+<span class="o">}</span>
+</code></pre></div>
+<h3 id="capabilitycheck">capabilityCheck</h3>
+
+<p>The <strong>node</strong> and <strong>python</strong> clients provide a <code>capabilityCheck</code> method that
+will perform the version check above, and that also provide limited support
+for testing capability support against older versions of the watchman server.
+This facilitates a smoother transition from version number based checks
+to capability named based checks.</p>
+
+<p>In <em>python</em>:</p>
+<div class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pywatchman</span>
+<span class="n">client</span> <span class="o">=</span> <span class="n">pywatchman</span><span class="o">.</span><span class="n">client</span><span class="p">()</span>
+<span class="c"># will throw an error if any of the required names are not supported</span>
+<span class="n">res</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">capabilityCheck</span><span class="p">(</span><span class="n">optional</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;a&#39;</span><span class="p">],</span> <span class="n">required</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;term-match&#39;</span><span class="p">])</span>
+<span class="k">print</span> <span class="n">res</span>
+<span class="c"># {&#39;version&#39;: &#39;3.8.0&#39;, &#39;capabilities&#39;: {&#39;term-match&#39;: True, &#39;a&#39;: False}}</span>
+</code></pre></div>
+<p>In <em>node</em>:</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">var</span> <span class="nx">watchman</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fb-watchman&#39;</span><span class="p">);</span>
+<span class="kd">var</span> <span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">watchman</span><span class="p">.</span><span class="nx">Client</span><span class="p">();</span>
+<span class="nx">client</span><span class="p">.</span><span class="nx">capabilityCheck</span><span class="p">({</span><span class="nx">optional</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">],</span> <span class="nx">required</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;term-match&#39;</span><span class="p">]},</span>
+    <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+        <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+          <span class="c1">// error will be an Error object if any of the required named</span>
+          <span class="c1">// are not supported</span>
+        <span class="p">}</span>
+        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">resp</span><span class="p">);</span>
+        <span class="c1">// {&#39;version&#39;: &#39;3.8.0&#39;, &#39;capabilities&#39;: {&#39;term-match&#39;: false, &#39;a&#39;: false}}</span>
+        <span class="nx">client</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
+    <span class="p">});</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/watch-del-all.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/watch-del-all.html
@@ -0,0 +1,745 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/watch-del-all.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="watch-del-all" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>watch-del-all</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/watch-del-all.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "watch-del-all",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">watch-del-all</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Available since version 3.1.1.</p>
+
+<p>Removes all watches and associated triggers.</p>
+
+<p>From the command line:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman watch-del-all
+</code></pre></div>
+<p>JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;watch-del-all&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>Analogous to the <code>watch-del</code> this command will remove all watches and
+associated triggers from the running process, and the state file (
+unless watchman service was started with
+<a href="/watchman/docs/cli-options.html#server-options">--no-save-state server option</a>).</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/watch-del.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/watch-del.html
@@ -0,0 +1,746 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/watch-del.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="watch-del" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>watch-del</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/watch-del.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "watch-del",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">watch-del</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Removes a watch and any associated triggers.</p>
+
+<p>From the command line:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman watch-del /path/to/dir
+</code></pre></div>
+<p>JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;watch-del&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/dir&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>The removed watch and any associated triggers will be removed from the state
+file and will not be automatically watched if/when watchman is restarted.</p>
+
+<p>However, if <code>--no-save-state</code> was used to start the watchman service, the watch
+and triggers will be deleted from the running process but no changes will be
+made to the state file.  If this same directory is listed in the state file,
+the watch will be re-established if/when the service is restarted.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/watch-list.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/watch-list.html
@@ -0,0 +1,746 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/watch-list.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="watch-list" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>watch-list</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/watch-list.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "watch-list",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">watch-list</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Returns a list of watched dirs.</p>
+
+<p>From the command line:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman watch-list
+</code></pre></div>
+<p>JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;watch-list&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>Result:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+    <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;1.9&quot;</span><span class="p">,</span>
+    <span class="nt">&quot;roots&quot;</span><span class="p">:</span> <span class="p">[</span>
+        <span class="s2">&quot;/home/wez/watchman&quot;</span>
+    <span class="p">]</span>
+<span class="p">}</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/watch-project.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/watch-project.html
@@ -0,0 +1,882 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/watch-project.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="watch-project" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>watch-project</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/watch-project.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "watch-project",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">watch-project</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>Since 3.1.</em></p>
+
+<p>Requests that the <em>project</em> containing the requested dir is watched for
+changes.  Watchman will track all files and dirs rooted at the <em>project</em> path,
+and respond with the relative path difference between the <em>project</em> path and
+the requested dir.</p>
+
+<h3 id="rationale">Rationale</h3>
+
+<p>With a proliferation of tools that wish to take advantage of
+filesystem watching at different locations in a filesystem tree, it is
+possible and likely for those tools to establish multiple overlapping
+watches.</p>
+
+<p>Most systems have a finite limit on the number of directories that can be
+watched effectively; when that limit is exceeded the performance and
+reliability of filesystem watching is degraded, sometimes to the point that it
+ceases to function.</p>
+
+<p>It is therefore desirable to avoid this situation and consolidate the
+filesystem watches.  Watchman offers the <code>watch-project</code> command to allow
+clients to opt-in to the watch consolidation behavior described below.</p>
+
+<h3 id="what-39-s-a-project-path">What&#39;s a project path?</h3>
+
+<p>A project is the logical root of a set of related files in a filesystem tree
+and is a good point at which to consolidate watches.  Tools such as
+<a href="https://bitbucket.org/facebook/hgwatchman">hgwatchman</a> will most likely have
+already established a watch at the root of a project, so any other tools that
+wish to watch a sub-directory can do so for no additional cost if they re-use
+that existing watch at a higher level in the filesystem tree.</p>
+
+<p>The <code>watch-project</code> command uses a simple procedure to locate the
+<em>project</em> path that corresponds to a given path.  While simple it is
+rather verbose to describe it precisely:</p>
+
+<ol>
+<li>The search is begun with a list of file names; we&#39;ll refer to it as
+<code>root_files</code>.  Any file in this list, if present in a directory,
+identifies that directory as being a valid project directory.</li>
+<li>The search is begun with the candidate directory set to the argument
+passed to <code>watch-project</code>.  The candidate directory is passed to
+the <code>realpath(3)</code> function and the result is set as the new value
+of the candidate directory.</li>
+<li>The candidate directory is concatenated with each of the <code>root_files</code>,
+one by one, and the resultant path is tested for existence.  If the
+path exists then the candidate directory is the path that will be used
+for watch and the search is halted successfully.</li>
+<li>If none of the <code>root_files</code> can be found in the candidate directory
+then the parent of the candidate directory is used as a new candidate
+and the process is repeated at step 3 above.</li>
+<li>If no viable candidates are found and the root of the filesystem is reached,
+then the search terminates unsuccessfully.</li>
+</ol>
+
+<p>Watchman may perform the above search procedure twice.  The logic is:</p>
+
+<ol>
+<li><code>root_files</code> will be set to list only <code>.watchmanconfig</code></li>
+<li>Perform the search procedure above</li>
+<li>If the search terminates successfully, then the watch is established
+for the current value of the candidate directory.</li>
+<li>If the search terminates unsuccessfully, <code>root_files</code> is set to
+the global configuration option <a href="../config.html#root_files">root_files</a>
+and the search procedure is re-run.</li>
+<li>If the search terminates successfully, then the watch is established
+for the current value of the candidate directory.</li>
+<li>If the global configuration option
+<a href="../config.html#enforce_root_files">enforce_root_files</a> is set to true
+then the watch attempt fails.</li>
+<li>Otherwise, the watch is established for the original argument to the
+<code>watch-project</code> command</li>
+</ol>
+
+<p>What this means in laymans terms is that the definitive location  of the
+project root is where the <code>.watchmanconfig</code> file is found.  If it is
+not found then the set of files defined by the <code>root_files</code> configuration
+is used to locate a candidate.</p>
+
+<p>If no viable candidate is found then watchman will watch the requested
+directory, unless the <code>enforce_root_files</code> setting is set to true.</p>
+
+<p>The default value for <code>root_files</code> will match most common version control
+root directories.  The default value for <code>enforce_root_files</code> is <code>false</code>.</p>
+
+<h3 id="using-watch-project">Using watch-project</h3>
+
+<p>Assuming that <code>~/www/.hg</code> and <code>~/www/some/child/dir</code> both exist, then
+the command:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman watch-project ~/www/some/child/dir
+<span class="o">{</span>
+  <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;3.0.1&quot;</span>,
+  <span class="s2">&quot;watch&quot;</span>: <span class="s2">&quot;/Users/wez/www&quot;</span>,
+  <span class="s2">&quot;relative_path&quot;</span>: <span class="s2">&quot;www&quot;</span>
+<span class="o">}</span>
+</code></pre></div>
+<p>establishes a watch on the <code>~/www</code> directory because that is the directory
+that contains <code>.hg</code>, which is one of the items listed in the default value
+for <code>root_files</code>.</p>
+
+<p>As a client using <code>watch-project</code> it is important to observe the
+<code>relative_path</code> and/or <code>watch</code> elements of the response; they identify which
+directory is actually being watched.  <strong>Any triggers, subscriptions or queries
+that the client issues must be relative to the watched root to operate as
+expected.</strong>  A client can use <code>relative_path</code> to more easily construct
+queries or adjust the results of queries by either concatenating the string
+when composing paths in a query expression or removing the string from the
+prefix when processing the results.</p>
+
+<p>If <code>relative_path</code> is missing from the response it means that the requested
+dir is the same as the watched dir and that the <code>watch-project</code> invocation
+turned out to be exactly equivalent to a <code>watch</code> invocation for the requested
+directory.</p>
+
+<p>Note that, when you&#39;re using the CLI, you can specify the root as
+<code>~/www/some/child/dir</code> because the shell will resolve <code>~/www/some/child/dir</code> to
+<code>/Users/wez/www/some/child/dir</code>, but when you use the JSON protocol, you are
+responsible for supplying an absolute path.</p>
+
+<p>JSON:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;watch&quot;</span><span class="p">,</span> <span class="s2">&quot;/Users/wez/www/some/child/dir&quot;</span><span class="p">]</span>
+</code></pre></div>
+<h3 id="initiating-a-watch">Initiating a watch</h3>
+
+<p>Once a viable candidate is found, if watchman is not already watching the
+directory, then watchman will:</p>
+
+<ul>
+<li>Establish change notification for the directory with the kernel</li>
+<li>Queues up a request to crawl the directory</li>
+<li>As the directory contents are resolved, those are watched in a similar
+fashion</li>
+<li>All newly observed files are considered changed</li>
+</ul>
+
+<h3 id="persistence">Persistence</h3>
+
+<p>Unless the <code>--no-save-state</code> server option was used to start the watchman
+service, watches and their associated triggers are saved and re-established
+across a process restart.</p>
+
+<p><em>Since 3.7.</em></p>
+
+<p>The watchman service may decide to reap watches that have been idle for an
+extended period of time.  A watch is considered to be idle if no watchman
+queries have been issued against the watch.  If a watch is idle, and has no
+triggers registered or active subscriptions then it is a candidate for reaping.</p>
+
+<p>The <a href="../config.html#idle-reap-age-seconds">idle_reap_age_seconds</a> configuration
+parameter controls the idle timeout for a watch.  The default is 5 days.
+A reaped watch is cancelled and removed from the state file.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cmd/watch.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cmd/watch.html
@@ -0,0 +1,785 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cmd/watch.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="watch" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>watch</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cmd/watch.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "watch",
+        currentGroup: "Commands",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">watch</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Deprecated starting in version 3.1.  We recommend that clients adopt
+the <a href="../cmd/watch-project.html">watch-project</a> command.</p>
+
+<p>Requests that the specified dir is watched for changes.
+Watchman will track all files and dirs rooted at the specified path.</p>
+
+<p>From the command line:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman watch ~/www
+</code></pre></div>
+<p>Note that, when you&#39;re using the CLI, you can specify the root as <code>~/www</code>
+because the shell will resolve <code>~/www</code> to <code>/home/wez/www</code>, but when you use the
+JSON protocol, you are responsible for supplying an absolute path.</p>
+
+<p>JSON:
+<code>json
+[&quot;watch&quot;, &quot;/home/wez/www&quot;]
+</code></p>
+
+<p>Watchman will <code>realpath(3)</code> the directory and start watching it if it isn&#39;t
+already.  A newly watched directory is processed in a couple of stages:</p>
+
+<ul>
+<li>Establishes change notification for the directory with the kernel</li>
+<li>Queues up a request to crawl the directory</li>
+<li>As the directory contents are resolved, those are watched in a similar
+fashion</li>
+<li>All newly observed files are considered changed</li>
+</ul>
+
+<p>Unless the <code>--no-save-state</code> server option was used to start the watchman
+service, watches and their associated triggers are saved and re-established
+across a process restart.</p>
+
+<h2 id="case-insensitivity">Case-Insensitivity</h2>
+
+<p>Watchman has the following level of support for case-insensitive filesystems,
+starting in version 2.9.9 on OS X only:</p>
+
+<ul>
+<li>each watched root is queried to determine if it is case-insensitive.
+This is the common default for most Mac systems running HFS+.</li>
+<li>When in case-insensitive mode, Watchman will attempt to resolve the true
+canonical name of a file on the filesystem when it observes changes.</li>
+<li>If the case of a filename changes, Watchman will report a delete of the
+old name and a change for the new name.</li>
+<li>Query expressions that match names will default to case-insensitive when
+the root is on a case-insensitive filesystem.</li>
+<li>Watchman&#39;s case folding is ASCII case-folding.
+Note that the <code>match</code> and <code>pcre</code> query expression terms request case folding
+support from the containing library, and that their case folding behavior is
+not controlled by Watchman beyond being enabled when the root is
+case-insensitive.</li>
+<li>The <code>path</code> generator is always case sensitive.</li>
+</ul>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/compatibility.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/compatibility.html
@@ -0,0 +1,762 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/compatibility.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Compatibility Rules" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Compatibility Rules</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/compatibility.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Compatibility Rules",
+        currentGroup: "",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Compatibility Rules</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><code>watchman</code> has been used in production since a few weeks after it was first
+written, and thus it has always made an effort to be backward compatible across
+releases and platforms.</p>
+
+<ul>
+<li>Commands and options will never be removed, but new ones may be added.</li>
+<li>We may <em>deprecate</em> commands and options and remove them from documentation,
+but they will still continue to work forever.</li>
+<li>Whenever a command or option is deprecated, we will provide a suitable
+alternative.</li>
+<li>Bugfixes might cause minor behavior changes -- these changes will usually be
+documented in release notes.</li>
+</ul>
+
+<p><code>watchman</code> does not follow <a href="http://semver.org">semantic versioning</a>!</p>
+
+<ul>
+<li>Since its public APIs never make incompatible changes, MAJOR versions are
+moot.</li>
+<li>While in the past we&#39;ve released versions with three components (x.y.z),
+starting version 3.1 the version number will only have two components that
+are meaningful (x.y), with the third component always zero.</li>
+<li>The version after 3.9 is expected to be 4.0.  The version number string
+reported by these versions will be 3.9.0 and 4.0.0 respectively.</li>
+</ul>
+
+<p><em>Since 3.8.</em></p>
+
+<p><code>watchman</code> introduces <a href="capabilities.html">capabilities</a> to describe new
+or optional features.  You can use the <a href="/watchman/docs/cmd/version.html">expanded version command</a> to query capabilities and avoid building
+knowledge of version numbers in your client application(s).</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/config.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/config.html
@@ -0,0 +1,1003 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/config.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Configuration Files" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Configuration Files</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/config.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Configuration Files",
+        currentGroup: "",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Configuration Files</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Watchman looks for configuration files in two places:</p>
+
+<ul>
+<li>The global configuration file <code>/etc/watchman.json</code></li>
+<li>The root specific configuration file <code>.watchmanconfig</code></li>
+</ul>
+
+<p>When watching a root, if a valid JSON file named <code>.watchmanconfig</code> is present
+in the root directory, watchman will load it and use it as a source of
+configuration information specific to that root.</p>
+
+<p>The global configuration path can be changed by passing the
+<code>--enable-conffile</code> option to configure when you build watchman.  This
+documentation refers to it as <code>/etc/watchman.json</code> throughout, just be aware
+that your particular installation may locate it elsewhere.   In addition,
+the environmental variable <code>$WATCHMAN_CONFIG_FILE</code> will override the
+default location.</p>
+
+<p>Changes to the <code>.watchmanconfig</code> or <code>/etc/watchman.json</code> files are not picked
+up automatically; you will need to remove and re-add the watch (for
+<code>.watchmanconfig</code>) or restart watchman (for <code>/etc/watchman.json</code>) for those
+changes to take effect.</p>
+
+<h3 id="resolution-scoping">Resolution / Scoping</h3>
+
+<p>There are three configuration scopes:</p>
+
+<ul>
+<li><strong>local</strong> - the option value is read from the <code>.watchmanconfig</code> file in the
+associated root.</li>
+<li><strong>global</strong> - the option value is read from the <code>/etc/watchman.json</code> file</li>
+<li><strong>fallback</strong> - the option value is read from the <code>.watchmanconfig</code> file.
+If the option was not present in the <code>.watchmanconfig</code> file, then read
+it from the <code>/etc/watchman.json</code> file.</li>
+</ul>
+
+<p>This table shows the scoping and availability of the various options:</p>
+
+<table><thead>
+<tr>
+<th>Option</th>
+<th>Scope</th>
+<th>Since version</th>
+</tr>
+</thead><tbody>
+<tr>
+<td><code>settle</code></td>
+<td>local</td>
+<td></td>
+</tr>
+<tr>
+<td><code>root_restrict_files</code></td>
+<td>global</td>
+<td>deprecated in 3.1</td>
+</tr>
+<tr>
+<td><code>root_files</code></td>
+<td>global</td>
+<td>3.1</td>
+</tr>
+<tr>
+<td><code>enforce_root_files</code></td>
+<td>global</td>
+<td>3.1</td>
+</tr>
+<tr>
+<td><code>illegal_fstypes</code></td>
+<td>global</td>
+<td>2.9.8</td>
+</tr>
+<tr>
+<td><code>illegal_fstypes_advice</code></td>
+<td>global</td>
+<td>2.9.8</td>
+</tr>
+<tr>
+<td><code>ignore_vcs</code></td>
+<td>local</td>
+<td>2.9.3</td>
+</tr>
+<tr>
+<td><code>ignore_dirs</code></td>
+<td>local</td>
+<td>2.9.3</td>
+</tr>
+<tr>
+<td><code>gc_age_seconds</code></td>
+<td>local</td>
+<td>2.9.4</td>
+</tr>
+<tr>
+<td><code>gc_interval_seconds</code></td>
+<td>local</td>
+<td>2.9.4</td>
+</tr>
+<tr>
+<td><code>fsevents_latency</code></td>
+<td>fallback</td>
+<td>3.2</td>
+</tr>
+<tr>
+<td><code>idle_reap_age_seconds</code></td>
+<td>local</td>
+<td>3.7</td>
+</tr>
+</tbody></table>
+
+<h3 id="configuration-options">Configuration Options</h3>
+
+<h3 id="settle">settle</h3>
+
+<p>Specifies the settle period in <em>milliseconds</em>.  This controls how long the
+filesystem should be idle before dispatching triggers.  The default value is 20
+milliseconds.</p>
+
+<h3 id="root_files">root_files</h3>
+
+<p><em>Since 3.1.</em></p>
+
+<p>Specifies a list of files that, if present in a directory, identify that
+directory as the root of a project.</p>
+
+<p>If left unspecified, to aid in transitioning between versions, watchman will
+use the value of the now deprecated
+<a href="#root_restrict_files">root_restrict_files</a> configuration setting.</p>
+
+<p>If neither <code>root_files</code> nor <code>root_restrict_files</code> is specified in the
+configuration, watchman will use a default value consisting of:</p>
+
+<ul>
+<li><code>.git</code></li>
+<li><code>.hg</code></li>
+<li><code>.svn</code></li>
+<li><code>.watchmanconfig</code></li>
+</ul>
+
+<p>Watchman will add <code>.watchmanconfig</code> to whatever value is specified for
+this configuration value if it is not present.</p>
+
+<p>This example causes only <code>.watchmanconfig</code> to be considered as a project
+root file:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+  <span class="nt">&quot;root_files&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;.watchmanconfig&quot;</span><span class="p">]</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>See the <a href="cmd/watch-project.html">watch-project</a> command for more information.</p>
+
+<h3 id="enforce_root_files">enforce_root_files</h3>
+
+<p><em>Since 3.1.</em></p>
+
+<p>This is a boolean option that defaults to <code>false</code>.  If it is set to <code>true</code>
+then the <a href="cmd/watch.html">watch</a> command will only succeed if the requested
+directory contains one of the files listed by the <a href="#root_files">root_files</a>
+configuration option, and the <a href="cmd/watch-project.html">watch-project</a> command
+will only succeed if a valid project root is found.</p>
+
+<p>If left unspecified, to aid in transitioning between versions, watchman will
+check to see if the now deprecated <a href="#root_restrict_files">root_restrict_files</a>
+configuration setting is present.  If it is found then the effective value of
+<code>enforce_root_files</code> is set to <code>true</code>.</p>
+
+<h3 id="root_restrict_files">root_restrict_files</h3>
+
+<p><em>Deprecated starting in version 3.1; use <a href="#root_files">root_files</a> and
+<a href="#enforce_root_files">enforce_root_files</a> to effect the same behavior.</em></p>
+
+<p>Specifies a list of files, at least one of which should be present in a
+directory for watchman to add it as a root. By default there are no
+restrictions.</p>
+
+<p>For example,</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+  <span class="nt">&quot;root_restrict_files&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;.git&quot;</span><span class="p">,</span> <span class="s2">&quot;.hg&quot;</span><span class="p">]</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>will allow watches only in the top level of Git or Mercurial repositories.</p>
+
+<h3 id="illegal_fstypes">illegal_fstypes</h3>
+
+<p>Specifies a list of filesystem types that watchman is prohibited to attempt to
+watch.  Watchman will determine the filesystem type of the root of a watch; if
+the typename is present in the <code>illegal_fstypes</code> list, the watch will be
+prohibited.  You may also specify <code>illegal_fstypes_advice</code> as a string with
+additional advice to your user.  The purpose of this configuration option is
+largely to prevent the use of Watchman on network mounted filesystems.  On
+Linux systems, Watchman may not be able to determine the precise type name of a
+mounted filesystem.  If the filesystem type is not known to watchman, it will
+be reported as <code>unknown</code>.</p>
+
+<p>For example,</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+  <span class="nt">&quot;illegal_fstypes&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;nfs&quot;</span><span class="p">,</span> <span class="s2">&quot;cifs&quot;</span><span class="p">,</span> <span class="s2">&quot;smb&quot;</span><span class="p">],</span>
+  <span class="nt">&quot;illegal_fstypes_advice&quot;</span><span class="p">:</span> <span class="s2">&quot;use a local directory&quot;</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>will prevent watching dirs mounted on network filesystems and provide the
+advice to use a local directory.  You may omit the <code>illegal_fstypes_advice</code>
+setting to use a default suggestion to relocate the directory to local disk.</p>
+
+<h3 id="ignore_vcs">ignore_vcs</h3>
+
+<p>Apply special VCS ignore logic to the set of named dirs.  This option has a
+default value of <code>[&quot;.git&quot;, &quot;.hg&quot;, &quot;.svn&quot;]</code>.  Dirs that match this option are
+observed and watched using special shallow logic.  The shallow watch allows
+watchman to mildly abuse the version control directories to store its query
+cookie files and to observe VCS locking activity without having to watch the
+entire set of VCS data for large trees.</p>
+
+<h3 id="ignore_dirs">ignore_dirs</h3>
+
+<p>Dirs that match are completely ignored by watchman.  This is useful to ignore a
+directory that contains only build products and where file change notifications
+are unwanted because of the sheer volume of files.</p>
+
+<p>For example,</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span>
+  <span class="nt">&quot;ignore_dirs&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;build&quot;</span><span class="p">]</span>
+<span class="p">}</span>
+</code></pre></div>
+<p>would ignore the <code>build</code> directory at the top level of the watched tree, and
+everything below it.  It will never appear in the watchman query results for
+the tree.</p>
+
+<p>Since version 2.9.9, if you list a dir in <code>ignore_dirs</code> that is also listed in
+<code>ignore_vcs</code>, the <code>ignore_dirs</code> placement will take precedence.  This may not
+sound like a big deal, but since <code>ignore_vcs</code> is used as a hint to for the
+placement of <a href="/watchman/docs/cookies.html">cookie files</a>, having these two
+options overlap in earlier versions would break watchman queries.</p>
+
+<h3 id="gc_age_seconds">gc_age_seconds</h3>
+
+<p>Deleted files (and dirs) older than this are periodically pruned from the
+internal view of the filesystem.  Until they are pruned, they will be visible
+to queries but will have their <code>exists</code> field set to <code>false</code>.   Once they are
+pruned, watchman will remember the most recent clock value of the pruned nodes.
+Any since queries based on a clock prior to the last prune clock will be
+treated as a fresh instance query.  This allows a client to detect and choose
+how to handle the case where they have missed changes.  See <code>is_fresh_instance</code>
+elsewhere in this document for more information.  The default for this is
+<code>43200</code> (12 hours).</p>
+
+<h3 id="gc_interval_seconds">gc_interval_seconds</h3>
+
+<p>How often to check for, and prune out, deleted nodes per the <code>gc_age_seconds</code>
+option description above.  The default for this is <code>86400</code> (24 hours).  Set
+this to <code>0</code> to disable the periodic pruning operation.</p>
+
+<h3 id="fsevents_latency">fsevents_latency</h3>
+
+<p>Controls the latency parameter that is passed to <code>FSEventStreamCreate</code> on OS X.
+The value is measured in seconds.  The fixed value of this parameter prior to
+version 3.2 of watchman was <code>0.0001</code> seconds.  Starting in version 3.2 of
+watchman, the default is now <code>0.01</code> seconds and can be controlled on a
+per-root basis.</p>
+
+<p>If you observe problems with <code>kFSEventStreamEventFlagUserDropped</code> increasing
+the latency parameter will allow the system to batch more change notifications
+together and operate more efficiently.</p>
+
+<h3 id="idle_reap_age_seconds">idle_reap_age_seconds</h3>
+
+<p><em>Since 3.7.</em></p>
+
+<p>How many seconds a watch can remain idle before becoming a candidate for
+reaping, measured in seconds.  The default for this is <code>432000</code> (5 days).  Set
+this to <code>0</code> to prevent reaping.</p>
+
+<p>A watch is considered to be idle when it has had no commands that operate on it
+for <code>idle_reap_age_seconds</code>.   If an idle watch has no triggers and no
+subscriptions then it will be cancelled, releasing the associated operating
+system resources, and removed from the state file.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/cookies.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/cookies.html
@@ -0,0 +1,819 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/cookies.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Query Synchronization" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Query Synchronization</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/cookies.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Query Synchronization",
+        currentGroup: "",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Query Synchronization</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>A file system monitor needs to make sure that queries see up-to-date
+views. Watchman ensures that by creating a unique <em>cookie</em> for each query made
+to it.</p>
+
+<h2 id="background">Background</h2>
+
+<p>Consider a directory tree traversal to gather file status, such as the one
+performed by <code>hg status</code> or <code>git status</code>. The traversal will race with any
+operations happening concurrently, and this is impossible to fix. However, we
+do get some weaker guarantees:</p>
+
+<ol>
+<li>Every file operation that happens before the traversal is started will be
+observed.</li>
+<li>File operations that happen after the traversal is started may or may not be
+observed.</li>
+</ol>
+
+<p>For watchman, cookies enable us to provide similar guarantees. For a given
+watchman query:</p>
+
+<ol>
+<li>Every file operation that happens before the query is started will be
+observed.</li>
+<li>File operations that happen after the query is started may or may not be
+observed.</li>
+</ol>
+
+<h2 id="how-cookies-work">How cookies work</h2>
+
+<p>A <em>cookie</em> is a temporary file that is created inside a directory observed by
+watchman. The cookie is created in a directory that is expected not to go
+away. The obvious location is the root itself, but we&#39;d like cookies not to show
+up in VCS operations. So if a VCS directory (<code>.git</code>, <code>.hg</code> or <code>.svn</code>) is found,
+that&#39;s where cookies are created instead.</p>
+
+<p>The cookie is created while the root is locked, so watchman won&#39;t find the
+cookie by accident while processing events from a prior run.</p>
+
+<p>Once the cookie is created, the calling thread waits on a condition variable
+guarded by the root&#39;s lock. This causes the lock to be released, and the root&#39;s
+notify thread can now read events as usual.</p>
+
+<p>When the notify thread finds that it is processing a cookie, it will signal its
+respective condition variable. Importantly, this does not wake the calling
+thread up immediately: since the notify thread still holds the root lock, the
+calling thread will only be able to proceed once the notify thread releases the
+lock.</p>
+
+<p><em>What do cookies get us?</em></p>
+
+<p>File monitoring systems like <code>inotify</code> typically provide an ordering guarantee:
+notifications arrive in the order they happen. Any events happening before the
+cookie is created will appear before the event for the cookie does, which means
+they will be processed by the time the query is answered.</p>
+
+<p><em>How well do cookies work?</em></p>
+
+<p>The Mercurial test suite has proved to be a good stress test for
+watchman. Before cookies were implemented, if 16 or more tests from the suite
+were run in parallel, watchman would start falling behind and often produce
+outdated answers. Cookies have successfully eradicated that.</p>
+
+<p><em>Can watchman find a cookie even if not all events leading to its appearance
+ have been processed?</em></p>
+
+<p>Consider this situation when cookies are created inside <code>.hg</code>:</p>
+
+<ol>
+<li>Event A happens that would cause <code>.hg</code> to be read recursively</li>
+<li>Event B happens that touches a file <code>subdir/foo</code></li>
+<li>A cookie is created inside <code>.hg</code>, causing event C</li>
+<li>Event A is read from the OS file notification system but not events B and C</li>
+<li>The cookie is found but <code>subdir/foo</code> is never read.</li>
+</ol>
+
+<p>On Linux, to prevent this from happening, watchman will only consider a cookie
+to be found if it is directly returned via OS notifications. The only exception
+to this is during the initial crawl or a recrawl, when the cookie directory
+isn&#39;t being watched yet.</p>
+
+<p>On other platforms, this becomes more complicated because the respective
+monitoring system only tells us that something inside a directory was created,
+not what was created. This is currently an unresolved issue.</p>
+
+<h2 id="credits">Credits</h2>
+
+<p>The idea was originally proposed by Matt Mackall <a href="mailto:mpm@selenic.com">mpm@selenic.com</a>.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/allof.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/allof.html
@@ -0,0 +1,740 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/allof.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="allof" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>allof</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/allof.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "allof",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">allof</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>allof</code> expression term evaluates as true if all of the grouped expressions
+also evaluated as true.  For example, this expression matches only files whose
+name ends with <code>.txt</code> and that are not empty files:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;allof&quot;, [&quot;match&quot;, &quot;*.txt&quot;], [&quot;not&quot;, &quot;empty&quot;]]
+</code></pre></div>
+<p>Each array element after the term name is evaluated as an expression of its own:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;allof&quot;, expr1, expr2, ... exprN]
+</code></pre></div>
+<p>Evaluation of the subexpressions stops at the first one that returns false.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/anyof.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/anyof.html
@@ -0,0 +1,740 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/anyof.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="anyof" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>anyof</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/anyof.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "anyof",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">anyof</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>anyof</code> expression term evaluates as true if any of the grouped expressions
+also evaluated as true.  The following expression matches files whose name ends
+with either <code>.txt</code> or <code>.md</code>:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;anyof&quot;, [&quot;match&quot;, &quot;*.txt&quot;], [&quot;match&quot;, &quot;*.md&quot;]]
+</code></pre></div>
+<p>Each array element after the term name is evaluated as an expression of its own:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;anyof&quot;, expr1, expr2, ... exprN]
+</code></pre></div>
+<p>Evaluation of the subexpressions stops at the first one that returns true.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/dirname.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/dirname.html
@@ -0,0 +1,762 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/dirname.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="dirname & idirname" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>dirname & idirname</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/dirname.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "dirname & idirname",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">dirname & idirname</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>Since version 3.1</em></p>
+
+<p>The <code>dirname</code> term allows matching on the parent directory structure for a
+given file.</p>
+
+<p>For the examples below, given a file with a wholename (the relative path from
+the project root) of <code>foo/bar/baz</code>, the dirname portion is <code>foo/bar</code>.</p>
+
+<p>The following two terms will match any file whose dirname is either exactly a
+match for <code>foo/bar</code> or is any child directory of <code>foo/bar</code>.  The first of these
+two is a shortcut for the second:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">  [&quot;dirname&quot;, &quot;foo/bar&quot;]
+  [&quot;dirname&quot;, &quot;foo/bar&quot;, [&quot;depth&quot;, &quot;ge&quot;, 0]]
+</code></pre></div>
+<p>The second of those terms uses a relational expression based on the depth of
+the file within the specified dirname.  A file is considered to have
+<code>depth == 0</code> if it is contained directly within the specified dirname.  It has
+<code>depth == 1</code> if it is contained in a direct child directory of the specified
+dirname, <code>depth == 2</code> if it is contained in a grand-child directory and so on.</p>
+
+<p>The relational expression accepts the same relational operators as described in
+the <a href="size.html">size term</a>.</p>
+
+<p>If you wanted to match only files that were directly in the <code>foo/bar</code> dir:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">  [&quot;dirname&quot;, &quot;foo/bar&quot;, [&quot;depth&quot;, &quot;eq&quot;, 0]]
+</code></pre></div>
+<p>If you wanted to match only files that were in a grand-child or deeper:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">  [&quot;dirname&quot;, &quot;foo/bar&quot;, [&quot;depth&quot;, &quot;ge&quot;, 2]]
+</code></pre></div>
+<p><code>idirname</code> is the case insensitive version of <code>dirname</code>.  If the watched root
+is detected as a case insensitive fileystem, <code>dirname</code> is equivalent to <code>idirname</code>.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/empty.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/empty.html
@@ -0,0 +1,735 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/empty.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="empty" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>empty</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/empty.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "empty",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">empty</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Evaluates as true if the file exists, has size 0 and is a regular file or
+directory.</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">&quot;empty&quot;
+[&quot;empty&quot;]
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/exists.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/exists.html
@@ -0,0 +1,734 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/exists.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="exists" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>exists</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/exists.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "exists",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">exists</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Evaluates as true if the file exists</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">&quot;exists&quot;
+[&quot;exists&quot;]
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/false.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/false.html
@@ -0,0 +1,734 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/false.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="false" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>false</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/false.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "false",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">false</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>false</code> expression always evaluates as false.</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">&quot;false&quot;
+[&quot;false&quot;]
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/match.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/match.html
@@ -0,0 +1,775 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/match.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="match & imatch" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>match & imatch</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/match.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "match & imatch",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">match & imatch</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>match</code> expression performs a glob-style match against the basename of
+the file, evaluating true if the match is successful.</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.txt&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>You may optionally provide a third argument to change the scope of the match
+from the basename to the wholename of the file.</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;basename&quot;</span><span class="p">]</span>
+<span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;dir/*.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;wholename&quot;</span><span class="p">]</span>
+</code></pre></div>
+<h3 id="case-sensitivity">Case sensitivity</h3>
+
+<p><code>match</code> is case sensitive; for case insensitive matching use <code>imatch</code> instead;
+it behaves identically to <code>match</code> except that the match is performed ignoring
+case.</p>
+
+<p><em>Since 2.9.9.</em></p>
+
+<p>On systems where the watched root is a case insensitive filesystem (this is the
+common case for OS X and Windows), <code>match</code> is equivalent to <code>imatch</code>.</p>
+
+<h2 id="wildmatch">wildmatch</h2>
+
+<p><em>Since 3.7.</em></p>
+
+<p>The <code>match</code> expression has been enhanced as described below.  The
+<a href="/watchman/docs/capabilities.html">capability</a> name associated with this
+enhanced functionality is <code>wildmatch</code>.</p>
+
+<p>If you want to recursively match all files under a directory, use the <code>**</code>
+glob operator along with the <code>wholename</code> scope:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;src/**/*.java&quot;</span><span class="p">,</span> <span class="s2">&quot;wholename&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>By default, paths whose names start with <code>.</code> are not included. To
+change this behavior, you may optionally provide a fourth argument
+containing a dictionary of flags:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;basename&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nt">&quot;includedotfiles&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">}]</span>
+</code></pre></div>
+<p>By default, backslashes in the pattern escape the next character, so
+<code>\*</code> matches a literal <code>*</code> character. To change this behavior so
+backslashes are treated literally, set the <code>noescape</code> flag to <code>true</code>
+in the flags dictionary. (Note that <code>\\</code> is a literal <code>\</code> in JSON notation):</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*\\*.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;filename&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nt">&quot;noescape&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">}]</span>
+</code></pre></div>
+<p>matches <code>a\b.txt</code>.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/name.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/name.html
@@ -0,0 +1,752 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/name.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="name & iname" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>name & iname</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/name.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "name & iname",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">name & iname</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>name</code> expression performs exact matches against file names.  By default it
+is scoped to the basename of the file:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;name&quot;, &quot;Makefile&quot;]
+</code></pre></div>
+<p>You may specify multiple names to match against by setting the second argument
+to an array:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;name&quot;, [&quot;foo.txt&quot;, &quot;Makefile&quot;]]
+</code></pre></div>
+<p>This second form can be accelerated and is preferred over an <code>anyof</code>
+construction.</p>
+
+<p>You may change the scope of the match via the optional third argument:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;name&quot;, &quot;path/to/file.txt&quot;, &quot;wholename&quot;]
+[&quot;name&quot;, [&quot;path/to/one&quot;, &quot;path/to/two&quot;], &quot;wholename&quot;]
+</code></pre></div>
+<p>Finally, you may specify case insensitive evaluation by using <code>iname</code> instead
+of <code>name</code>.</p>
+
+<p>Starting in version 2.9.9, on OS X systems where the watched root is a case
+insensitive filesystem (this is the common case for OS X), <code>name</code> is equivalent
+to <code>iname</code>.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/not.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/not.html
@@ -0,0 +1,733 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/not.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="not" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>not</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/not.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "not",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">not</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>not</code> expression inverts the result of the subexpression argument:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;not&quot;, &quot;empty&quot;]
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/pcre.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/pcre.html
@@ -0,0 +1,750 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/pcre.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="pcre & ipcre" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>pcre & ipcre</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/pcre.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "pcre & ipcre",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">pcre & ipcre</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>To use this feature, you must configure watchman <code>--with-pcre</code>!</em></p>
+
+<p>The <code>pcre</code> expression performs a Perl Compatible Regular Expression match
+against the basename of the file.  This pattern matches <code>test_plan.php</code> but not
+<code>mytest_plan</code>:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;pcre&quot;, &quot;^test_&quot;]
+</code></pre></div>
+<p>You may optionally provide a third argument to change the scope of the match
+from the basename to the wholename of the file.</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;pcre&quot;, &quot;txt&quot;, &quot;basename&quot;]
+[&quot;pcre&quot;, &quot;txt&quot;, &quot;wholename&quot;]
+</code></pre></div>
+<p><code>pcre</code> is case sensitive; for case insensitive matching use <code>ipcre</code> instead;
+it behaves identically to <code>pcre</code> except that the match is performed ignoring
+case.</p>
+
+<p>Starting in version 2.9.9, on OS X systems where the watched root is a case
+insensitive filesystem (this is the common case for OS X), <code>pcre</code> is equivalent
+to <code>ipcre</code>.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/since.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/since.html
@@ -0,0 +1,760 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/since.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="since" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>since</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/since.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "since",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">since</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Evaluates as true if the specified time property of the file is greater than
+the since value.  Note that this is not the same as the <code>since</code> generator; when
+used as an expression term we are performing a straight clockspec comparison.
+When used as a generator, candidate files are selected based on the <code>since</code>
+time index.  The end result might or might not be the same--in particular, if
+the <code>since</code> time index is not passed in, it will be treated the same as a fresh
+instance, and only files that exist will be returned. The efficiency can vary
+based on the size and shape of the file tree that you are watching; it may be
+cheaper to generate the candidate set of files by suffix and then check the
+modification time if many files were changed since your last query.</p>
+
+<p>This will yield a true value if the observed change time is more recent than
+the specified clockspec (this is equivalent to specifying &quot;oclock&quot; as the third
+parameter):</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> [&quot;since&quot;, &quot;c:12345:234&quot;]
+</code></pre></div>
+<p>You may specify particular fields from the filesystem metadata.  In this case
+your clockspec should be a unix time value:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> [&quot;since&quot;, 12345668, &quot;mtime&quot;]
+ [&quot;since&quot;, 12345668, &quot;ctime&quot;]
+</code></pre></div>
+<p>You may explicitly request the observed clock values too; in these cases we&#39;ll
+accept either a timestamp or a clock value.  The <code>oclock</code> is the last observed
+change clock value (observed clock) and the <code>cclock</code> is the clock value where
+we first observed the file come into existence (created clock):</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> [&quot;since&quot;, 12345668, &quot;oclock&quot;]
+ [&quot;since&quot;, &quot;c:1234:123&quot;, &quot;oclock&quot;]
+ [&quot;since&quot;, 12345668, &quot;cclock&quot;]
+ [&quot;since&quot;, &quot;c:1234:2342&quot;, &quot;cclock&quot;]
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/size.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/size.html
@@ -0,0 +1,783 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/size.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="size" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>size</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/size.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "size",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">size</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p><em>Since version 3.1</em></p>
+
+<p>The size term allows the size of an existing file (not deleted) to be evaluated
+using simple relational operators as described in the table below.</p>
+
+<p>The size term must always be an array with 3 elements:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> [&quot;size&quot;, &quot;gt&quot;, 0]
+</code></pre></div>
+<p>The second parameter describes the relational operator and the third parameter
+is the integer <em>operand</em> to compare against.   The example above evaluates to
+<code>true</code> if the file exists and its size is greater than zero.</p>
+
+<p>Possible relational operators are:</p>
+
+<table><thead>
+<tr>
+<th>Operator</th>
+<th>Meaning</th>
+<th>Result</th>
+</tr>
+</thead><tbody>
+<tr>
+<td><code>eq</code></td>
+<td>Equal</td>
+<td><code>true</code> if file exists and <code>size == operand</code></td>
+</tr>
+<tr>
+<td><code>ne</code></td>
+<td>Not Equal</td>
+<td><code>true</code> if file exists and <code>size != operand</code></td>
+</tr>
+<tr>
+<td><code>gt</code></td>
+<td>Greater Than</td>
+<td><code>true</code> if file exists and <code>size &gt; operand</code></td>
+</tr>
+<tr>
+<td><code>ge</code></td>
+<td>Greater Than Or Equal</td>
+<td><code>true</code> if file exists and <code>size &gt;= operand</code></td>
+</tr>
+<tr>
+<td><code>lt</code></td>
+<td>Less Than</td>
+<td><code>true</code> if file exists and <code>size &lt; operand</code></td>
+</tr>
+<tr>
+<td><code>le</code></td>
+<td>Less Than Or Equal</td>
+<td><code>true</code> if file exists and <code>size &lt;= operand</code></td>
+</tr>
+</tbody></table>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/suffix.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/suffix.html
@@ -0,0 +1,736 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/suffix.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="suffix" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>suffix</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/suffix.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "suffix",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">suffix</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>suffix</code> expression evaluates true if the file suffix matches the second
+argument.  This matches files name <code>foo.php</code> and <code>foo.PHP</code> but not <code>foophp</code>:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;suffix&quot;, &quot;php&quot;]
+</code></pre></div>
+<p>Suffix expression matches are case insensitive.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/true.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/true.html
@@ -0,0 +1,734 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/true.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="true" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>true</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/true.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "true",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">true</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>The <code>true</code> expression always evaluates as true.</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">&quot;true&quot;
+[&quot;true&quot;]
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/expr/type.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/expr/type.html
@@ -0,0 +1,747 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/expr/type.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="type" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>type</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/expr/type.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "type",
+        currentGroup: "Expression Terms",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">type</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Evaluates as true if the type of the file matches that specified by the second
+argument; this matches regular files:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">[&quot;type&quot;, &quot;f&quot;]
+</code></pre></div>
+<p>Possible types are:</p>
+
+<ul>
+<li><strong>b</strong>: block special file</li>
+<li><strong>c</strong>: character special file</li>
+<li><strong>d</strong>: directory</li>
+<li><strong>f</strong>: regular file</li>
+<li><strong>p</strong>: named pipe (fifo)</li>
+<li><strong>l</strong>: symbolic link</li>
+<li><strong>s</strong>: socket</li>
+<li><strong>D</strong>: Solaris Door</li>
+</ul>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/file-query.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/file-query.html
@@ -0,0 +1,894 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/file-query.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="File Queries" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>File Queries</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/file-query.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "File Queries",
+        currentGroup: "Queries",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">File Queries</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Watchman file queries consist of 1 or more <em>generators</em> that feed files through
+the <em>expression evaluator</em>.</p>
+
+<h3 id="generators">Generators</h3>
+
+<p>Generators are analogous to the list of <em>paths</em> that you specify when using the
+<code>find(1)</code> utility, but are implemented in watchman with a bit of a twist
+because watchman doesn&#39;t need to crawl the filesystem in realtime and instead
+maintains a couple of indexes over the tree.</p>
+
+<p>A query may specify any number of generators; each generator will emit its list
+of files and this may mean that you see the same file output more than once if
+you specified the use of multiple generators that all produce the same file.</p>
+
+<p>Watchman provides 4 generators:</p>
+
+<ul>
+<li><strong>since</strong>: produces a list of files that were modified since a specific
+clockspec.</li>
+<li><strong>suffix</strong>: produces a list of files that have a particular suffix.</li>
+<li><strong>path</strong>: produces a list of files based on their path and depth.</li>
+<li><strong>all</strong>: produces a list of all known files</li>
+</ul>
+
+<h3 id="since-generator">Since Generator</h3>
+
+<p>The <code>since</code> generator produces a list of files that were modified since a
+specific <a href="../docs/clockspec.html">clockspec</a>.</p>
+
+<p>The following query will consider the set of files changed since the last
+query using the named cursor <code>mycursor</code> and then pass them to the expression
+evaluator to be filtered to just those that are files:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;query&quot;, &quot;/path/to/root&quot;, {</span>
+<span class="s">  &quot;since&quot;: &quot;n:mycursor&quot;,</span>
+<span class="s">  &quot;expression&quot;: [&quot;type&quot;, &quot;f&quot;]</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+<p>If the <code>since</code> parameter value is blank, was produced by a different watchman
+process (in other words, the watchman process was restarted between the time
+that the value was obtained and the time the query was issued) or is a named
+cursor that has not yet been used in a query, the <code>since</code> generator will
+consider the state to be a <em>fresh instance</em> and its behavior is modified:</p>
+
+<p>A <em>fresh instance</em> result set will only include files that currently exist
+and will generate file nodes that are always considered to be <code>new</code>.</p>
+
+<p>If the query was configured with the <code>empty_on_fresh_instance</code> property set to
+<code>true</code> then the result set will be empty and the <code>is_fresh_instance</code> property
+will be set to <code>true</code> in the result object.</p>
+
+<h3 id="suffix-generator">Suffix Generator</h3>
+
+<p>The <code>suffix</code> generator produces a list of files that have a particular suffix
+or set of suffixes.  The value can be either a string or an array of strings.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;query&quot;, &quot;/path/to/root&quot;, {</span>
+<span class="s">  &quot;suffix&quot;: &quot;js&quot;</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;query&quot;, &quot;/path/to/root&quot;, {</span>
+<span class="s">  &quot;suffix&quot;: [&quot;js&quot;, &quot;css&quot;]</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+<h3 id="path-generator">Path Generator</h3>
+
+<p>The <code>path</code> generator produces a list of files based on their path and depth.
+Depth controls how far watchman will search down the directory tree for files.</p>
+
+<p>The <code>path</code> generator expects an array of path specifiers.  Each path specifier
+can be either a string or an object and each will produce a set of files.</p>
+
+<p>If it is a string then it is treated as the value for <code>path</code> with <code>depth</code> set
+to infinite.  If an object, the fields <code>path</code> (a string) and <code>depth</code> (an
+integer) must be supplied.</p>
+
+<p>Paths are relative to the root, so if watchman is watching <code>/foo/</code>, path <code>bar</code>
+refers to <code>/foo/bar</code>.</p>
+
+<p>A <code>depth</code> value of <code>0</code> means only files and directories which are contained in
+this path.  A <code>depth</code> value of <code>-1</code> means no limit on the depth.</p>
+
+<p>The following <code>path</code> generators are equivalent:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">$ watchman -j &lt;&lt;-EOT
+[&quot;query&quot;, &quot;/path/to/root&quot;, {
+  &quot;path&quot;: [&quot;bar&quot;]
+}]
+EOT
+</code></pre></div><div class="highlight"><pre><code class="language-text" data-lang="text">$ watchman -j &lt;&lt;-EOT
+[&quot;query&quot;, &quot;/path/to/root&quot;, {
+  &quot;path&quot;: [{&quot;path&quot;: &quot;bar&quot;, &quot;depth&quot;: -1}]
+}]
+EOT
+</code></pre></div>
+<h3 id="all-generator">All Generator</h3>
+
+<p>The <code>all</code> generator produces a list of all file nodes.  It is the default
+generator and is used in the case where no other generators were explicitly
+specified.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>watchman -j <span class="s">&lt;&lt;-EOT</span>
+<span class="s">[&quot;query&quot;, &quot;/path/to/root&quot;, {</span>
+<span class="s">}]</span>
+<span class="s">EOT</span>
+</code></pre></div>
+<h3 id="expressions">Expressions</h3>
+
+<p>A watchman query expression consists of 0 or more expression terms.  If no
+terms are provided then each file evaluated is considered a match (equivalent
+to specifying a single <code>true</code> expression term).</p>
+
+<p>Otherwise, the expression is evaluated against the file and produces a boolean
+result.  If that result is true then the file is considered a match and is
+added to the output set.</p>
+
+<p>An expression term is canonically represented as a JSON array whose zeroth
+element is a string containing the term name.</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;termname&quot;</span><span class="p">,</span> <span class="err">arg</span><span class="mi">1</span><span class="p">,</span> <span class="err">arg</span><span class="mi">2</span><span class="p">]</span>
+</code></pre></div>
+<p>If the term accepts no arguments you may use a short form that consists of just
+the term name expressed as a string:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="s2">&quot;true&quot;</span>
+</code></pre></div>
+<p>Expressions that match against file names may match against either the
+<em>basename</em> or the <em>wholename</em> of the file.  The basename is the name of the
+file within its containing directory.  The wholename is the name of the file
+relative to the watched root.</p>
+
+<p>You can find a list of all possible expression terms in the sidebar on the left
+of this page.</p>
+
+<h3 id="relative-roots">Relative roots</h3>
+
+<p><em>Since 3.3.</em></p>
+
+<p>Watchman supports optionally evaluating queries with respect to a path within a
+watched root. This is used with the <code>relative_root</code> parameter:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;query&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/watched/root&quot;</span><span class="p">,</span> <span class="p">{</span>
+  <span class="nt">&quot;relative_root&quot;</span><span class="p">:</span> <span class="s2">&quot;project1&quot;</span><span class="p">,</span>
+<span class="p">}]</span>
+</code></pre></div>
+<p>Setting a relative root results in the following modifications to queries:</p>
+
+<ul>
+<li>The <code>path</code> generator is evaluated with respect to the relative root. In the
+above example, <code>&quot;path&quot;: [&quot;dir&quot;]</code> will return all files inside
+<code>/path/to/watched/root/project1/dir</code>.</li>
+<li>The input expression is evaluated with respect to the relative root. In the
+above example, <code>&quot;expression&quot;: [&quot;match&quot;, &quot;dir/*.txt&quot;, &quot;wholename&quot;]</code> will return
+all files inside <code>/path/to/watched/root/project1/dir/</code> that match the glob
+<code>*.txt</code>.</li>
+<li>Paths inside the relative root are returned with the relative root stripped
+off. For example, a path <code>project1/dir/file.txt</code> would be returned as
+<code>dir/file.txt</code>.</li>
+<li>Paths outside the relative root are not returned.</li>
+</ul>
+
+<p>Relative roots behave similarly to a separate Watchman watch on the
+subdirectory, without any of the system overhead that that imposes. This is
+useful for large repositories, where your script or tool is only interested in a
+particular directory inside the repository.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/install.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/install.html
@@ -0,0 +1,884 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/install.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Installation" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Installation</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/install.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Installation",
+        currentGroup: "Installation",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Installation</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <h2 id="system-requirements">System Requirements</h2>
+
+<p>Watchman is known to compile and pass its test suite on:</p>
+
+<ul>
+<li><i class="fa fa-linux"></i> Linux systems with <code>inotify</code></li>
+<li><i class="fa fa-apple"></i> OS X (uses <code>FSEvents</code> on 10.7+,
+<code>kqueue(2)</code> on earlier versions)</li>
+<li><i class="fa fa-windows"></i> Windows x64 on Windows Server 2012 R2 and
+later is currently in <strong>alpha</strong> status.  <a href="https://github.com/facebook/watchman/issues/19">More details on alpha testing this
+here</a></li>
+<li>BSDish systems (FreeBSD 9.1, OpenBSD 5.2) that have the
+<code>kqueue(2)</code> facility</li>
+<li>Illumos and Solaris style systems that have <code>port_create(3C)</code></li>
+</ul>
+
+<p>Watchman relies on the operating system facilities for file notification,
+which means that you will likely have very poor results using it on any
+kind of remote or distributed filesystem.</p>
+
+<p>Watchman does not currently support any other operating system not covered by
+the list above.</p>
+
+<h2 id="build-install">Build/Install</h2>
+
+<h3 id="installing-on-os-x-via-homebrew">Installing on OS X via Homebrew</h3>
+
+<p>To build the most recent release currently tracked by
+<a href="http://brew.sh/">Homebrew</a>:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>brew update
+<span class="nv">$ </span>brew install watchman
+</code></pre></div>
+<p>To install the latest build from github:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>brew install --HEAD watchman
+</code></pre></div>
+<h3 id="installing-on-os-x-via-macports">Installing on OS X via macports</h3>
+
+<p>To install the package maintained by <a href="https://www.macports.org">MacPorts</a>:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>sudo port install watchman
+</code></pre></div>
+<h3 id="installing-from-source">Installing from source</h3>
+
+<p>You can use these steps below to get watchman built.  You will need <code>autoconf</code>
+and <code>automake</code>.  You may optionally build watchman with <code>pcre</code> and <code>python</code>
+support.  For python support, you will also need <code>setuptools</code> and may need to
+install a <code>python-dev</code> or <code>python-devel</code> package.</p>
+
+<p>See below for some more information on options to configure your build.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>git clone https://github.com/facebook/watchman.git
+<span class="nv">$ </span><span class="nb">cd </span>watchman
+<span class="nv">$ </span>git checkout v3.7.0  <span class="c"># the latest stable release</span>
+<span class="nv">$ </span>./autogen.sh
+<span class="nv">$ </span>./configure
+<span class="nv">$ </span>make
+<span class="nv">$ </span>sudo make install
+</code></pre></div>
+<h3 id="compile-time-configuration-options">Compile Time Configuration Options</h3>
+
+<p>Our configure script accepts all the standard options, but there are a couple
+that are specific to watchman that might be relevant to your needs:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">--enable-conffile=PATH  Use PATH as the default configuration file name.
+                        Default is /etc/watchman.json
+
+--enable-statedir=PATH  Use PATH as the default for state, log files
+                        and sockets instead of using your system tempdir
+
+--enable-lenient  Turn off more pedantic levels of warnings
+                  and compilation checks
+
+--enable-stack-protector  Enable stack protection in the same
+                          way that rpmbuild does on some systems.
+
+--with-buildinfo=TEXT   Include some extra build information that will
+                        be reported in the version command output
+
+--with-python        Enable python bindings
+
+--without-pcre       Don&#39;t enable pcre support.
+--with-pcre=PATH     Enable pcre support.  PATH is location of pcre-config.
+                     Default is to enable and look for pcre-config in your
+                     $PATH
+
+--with-gimli    Enable support for the gimli process monitor
+                https://bitbucket.org/wez/gimli/
+</code></pre></div>
+<p>(Run <code>./configure --help</code> to get the list for the version you checked out)</p>
+
+<h3 id="continuous-integration">Continuous Integration</h3>
+
+<p>We use continuous integration to build out every revision and
+pull-request to make sure that it we don&#39;t accidentally break things.  The
+current build status is:</p>
+
+<p><a href="https://travis-ci.org/facebook/watchman"><img src="https://travis-ci.org/facebook/watchman.svg?branch=master" alt="Build Status"></a></p>
+
+<p><a href="https://ci.appveyor.com/project/wez/watchman/branch/master"><img src="https://ci.appveyor.com/api/projects/status/uvafoyc550kg438h/branch/master?svg=true" alt="Build status">
+</a></p>
+
+<h2 id="system-specific-preparation">System Specific Preparation</h2>
+
+<h3 id="linux-inotify-limits">Linux inotify Limits</h3>
+
+<p>The <code>inotify(7)</code> subsystem has three important tunings that impact watchman.</p>
+
+<ul>
+<li><code>/proc/sys/fs/inotify/max_user_instances</code> impacts how many different
+root dirs you can watch.</li>
+<li><code>/proc/sys/fs/inotify/max_user_watches</code> impacts how many dirs you
+can watch across all watched roots.</li>
+<li><code>/proc/sys/fs/inotify/max_queued_events</code> impacts how likely it is that
+your system will experience a notification overflow.</li>
+</ul>
+
+<p>You obviously need to ensure that <code>max_user_instances</code> and <code>max_user_watches</code>
+are set so that the system is capable of keeping track of your files.</p>
+
+<p><code>max_queued_events</code> is important to size correctly; if it is too small, the
+kernel will drop events and watchman won&#39;t be able to report on them.  Making
+this value bigger reduces the risk of this happening.</p>
+
+<p>Watchman has two simple strategies for mitigating an overflow of
+<code>max_queued_events</code>:</p>
+
+<ul>
+<li>It uses a dedicated thread to consume kernel events as quickly as possible</li>
+<li>When the kernel reports an overflow, watchman will assume that all the files
+have been modified and will re-crawl the directory tree as though it had just
+started watching the dir.</li>
+</ul>
+
+<p>This means that if an overflow does occur, you won&#39;t miss a legitimate change
+notification, but instead will get spurious notifications for files that
+haven&#39;t actually changed.</p>
+
+<h3 id="max-os-file-descriptor-limits">Max OS File Descriptor Limits</h3>
+
+<p><em>Only applicable on OS X 10.6 and earlier</em></p>
+
+<p>The default per-process descriptor limit on OS X is extremely low (256!).</p>
+
+<p>Watchman will attempt to raise its descriptor limit to match
+<code>kern.maxfilesperproc</code> when it starts up, so you shouldn&#39;t need to mess with
+<code>ulimit</code>; just raising the sysctl should do the trick.</p>
+
+<p>The following will raise the limits to allow 10 million files total, with 1
+million files per process until your next reboot.</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>sudo sysctl -w kern.maxfiles<span class="o">=</span>10485760
+<span class="nv">$ </span>sudo sysctl -w kern.maxfilesperproc<span class="o">=</span>1048576
+</code></pre></div>
+<p>Putting the following into a file named <code>/etc/sysctl.conf</code> on OS X will cause
+these values to persist across reboots:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">kern.maxfiles=10485760
+kern.maxfilesperproc=1048576
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/nodejs.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/nodejs.html
@@ -0,0 +1,1051 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/nodejs.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="NodeJS" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>NodeJS</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/nodejs.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "NodeJS",
+        currentGroup: "Invocation",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">NodeJS</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>To install the nodejs client:</p>
+<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>npm install fb-watchman
+</code></pre></div>
+<p>and to import it and create a client instance:</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">var</span> <span class="nx">watchman</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fb-watchman&#39;</span><span class="p">);</span>
+<span class="kd">var</span> <span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">watchman</span><span class="p">.</span><span class="nx">Client</span><span class="p">();</span>
+</code></pre></div>
+<p>This documentation assumes that you are using the latest available version
+of the <code>fb-watchman</code> package published to the npm repository.</p>
+
+<h2 id="checking-for-watchman-availability">Checking for watchman availability</h2>
+
+<p>The client can be installed without requiring that the service is installed.
+It is important to handle lack of availability and also to test whether
+the installed service supports the <a href="/watchman/docs/capabilities.html">capabilities</a>
+required by your application.</p>
+
+<p>The <code>capabilityCheck</code> method issues a <a href="/watchman/docs/cmds/version.html">version</a> command to query the capabilities of the
+server.</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">var</span> <span class="nx">watchman</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fb-watchman&#39;</span><span class="p">);</span>
+<span class="kd">var</span> <span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">watchman</span><span class="p">.</span><span class="nx">Client</span><span class="p">();</span>
+<span class="nx">client</span><span class="p">.</span><span class="nx">capabilityCheck</span><span class="p">({</span><span class="nx">optional</span><span class="o">:</span><span class="p">[],</span> <span class="nx">required</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;relative_root&#39;</span><span class="p">]},</span>
+  <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+      <span class="c1">// error will be an Error object if the watchman service is not</span>
+      <span class="c1">// installed, or if any of the names listed in the `required`</span>
+      <span class="c1">// array are not supported by the server</span>
+      <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
+    <span class="p">}</span>
+    <span class="c1">// resp will be an extended version response:</span>
+    <span class="c1">// {&#39;version&#39;: &#39;3.8.0&#39;, &#39;capabilities&#39;: {&#39;relative_roots&#39;: true}}</span>
+    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">resp</span><span class="p">);</span>
+  <span class="p">});</span>
+</code></pre></div>
+<h2 id="initiating-a-watch">Initiating a watch</h2>
+
+<p>Almost every operation in watchman revolves around watching a directory tree.
+You can repeatedly ask to watch the same directory without error; watchman will
+re-use an existing watch.</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">var</span> <span class="nx">watchman</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fb-watchman&#39;</span><span class="p">);</span>
+<span class="kd">var</span> <span class="nx">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">watchman</span><span class="p">.</span><span class="nx">Client</span><span class="p">();</span>
+
+<span class="kd">var</span> <span class="nx">dir_of_interest</span> <span class="o">=</span> <span class="s2">&quot;/some/path&quot;</span><span class="p">;</span>
+
+<span class="nx">client</span><span class="p">.</span><span class="nx">capabilityCheck</span><span class="p">({</span><span class="nx">optional</span><span class="o">:</span><span class="p">[],</span> <span class="nx">required</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;relative_root&#39;</span><span class="p">]},</span>
+  <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
+      <span class="nx">client</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
+      <span class="k">return</span><span class="p">;</span>
+    <span class="p">}</span>
+
+    <span class="c1">// Initiate the watch</span>
+    <span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;watch-project&#39;</span><span class="p">,</span> <span class="nx">dir_of_interest</span><span class="p">],</span>
+      <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+        <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+          <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">&#39;Error initiating watch:&#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
+          <span class="k">return</span><span class="p">;</span>
+        <span class="p">}</span>
+
+        <span class="c1">// It is considered to be best practice to show any &#39;warning&#39; or</span>
+        <span class="c1">// &#39;error&#39; information to the user, as it may suggest steps</span>
+        <span class="c1">// for remediation</span>
+        <span class="k">if</span> <span class="p">(</span><span class="s1">&#39;warning&#39;</span> <span class="k">in</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;warning: &#39;</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">warning</span><span class="p">);</span>
+        <span class="p">}</span>
+
+        <span class="c1">// `watch-project` can consolidate the watch for your</span>
+        <span class="c1">// dir_of_interest with another watch at a higher level in the</span>
+        <span class="c1">// tree, so it is very important to record the `relative_path`</span>
+        <span class="c1">// returned in resp</span>
+
+        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;watch established on &#39;</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">watch</span><span class="p">,</span>
+                    <span class="s1">&#39; relative_path&#39;</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">relative_path</span><span class="p">);</span>
+      <span class="p">});</span>
+  <span class="p">});</span>
+</code></pre></div>
+<h2 id="subscribing-to-changes">Subscribing to changes</h2>
+
+<p>Most node applications are interested in subscribing to live file
+change notifications.  In watchman these are configured by issuing
+a <a href="/watchman/docs/cmd/subscribe.html">subscribe</a> command.  A subscription
+is valid for the duration of your client connection, or until you cancel
+the subscription using the <a href="/watchman/docs/cmd/unsubscribe.html">unsubscribe</a>
+command.</p>
+
+<p>The following will generate subscription results for all files in the
+tree that match the query expression and then generate subscription
+results as files change:</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="c1">// `watch` is obtained from `resp.watch` in the `watch-project` response.</span>
+<span class="c1">// `relative_path` is obtained from `resp.relative_path` in the</span>
+<span class="c1">// `watch-project` response.</span>
+<span class="kd">function</span> <span class="nx">make_subscription</span><span class="p">(</span><span class="nx">client</span><span class="p">,</span> <span class="nx">watch</span><span class="p">,</span> <span class="nx">relative_path</span><span class="p">)</span> <span class="p">{</span>
+  <span class="nx">sub</span> <span class="o">=</span> <span class="p">{</span>
+    <span class="c1">// Match any `.js` file in the dir_of_interest</span>
+    <span class="nx">expression</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;allof&quot;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.js&quot;</span><span class="p">]],</span>
+    <span class="c1">// Which fields we&#39;re interested in</span>
+    <span class="nx">fields</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;size&quot;</span><span class="p">,</span> <span class="s2">&quot;exists&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span><span class="p">]</span>
+  <span class="p">};</span>
+  <span class="k">if</span> <span class="p">(</span><span class="nx">relative_path</span><span class="p">)</span> <span class="p">{</span>
+    <span class="nx">sub</span><span class="p">.</span><span class="nx">relative_root</span> <span class="o">=</span> <span class="nx">relative_path</span><span class="p">;</span>
+  <span class="p">}</span>
+
+  <span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;subscribe&#39;</span><span class="p">,</span> <span class="nx">watch</span><span class="p">,</span> <span class="s1">&#39;mysubscription&#39;</span><span class="p">,</span> <span class="nx">sub</span><span class="p">],</span>
+    <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+      <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+        <span class="c1">// Probably an error in the subscription criteria</span>
+        <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">&#39;failed to subscribe: &#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
+        <span class="k">return</span><span class="p">;</span>
+      <span class="p">}</span>
+      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;subscription &#39;</span> <span class="o">+</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">subscribe</span> <span class="o">+</span> <span class="s1">&#39; established&#39;</span><span class="p">);</span>
+    <span class="p">});</span>
+
+  <span class="c1">// Subscription results are emitted via the subscription event.</span>
+  <span class="c1">// Note that this emits for all subscriptions.  If you have</span>
+  <span class="c1">// subscriptions with different `fields` you will need to check</span>
+  <span class="c1">// the subscription name and handle the differing data accordingly.</span>
+  <span class="c1">// `resp`  looks like this in practice:</span>
+  <span class="c1">//</span>
+  <span class="c1">// { root: &#39;/private/tmp/foo&#39;,</span>
+  <span class="c1">//   subscription: &#39;mysubscription&#39;,</span>
+  <span class="c1">//   files: [ { name: &#39;node_modules/fb-watchman/index.js&#39;,</span>
+  <span class="c1">//       size: 4768,</span>
+  <span class="c1">//       exists: true,</span>
+  <span class="c1">//       type: &#39;f&#39; } ] }</span>
+  <span class="nx">client</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;subscription&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">files</span><span class="p">)</span> <span class="p">{</span>
+      <span class="kd">var</span> <span class="nx">f</span> <span class="o">=</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">files</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
+      <span class="k">if</span> <span class="p">(</span><span class="nx">resp</span><span class="p">.</span><span class="nx">subscription</span> <span class="o">==</span> <span class="s1">&#39;mysubscription&#39;</span><span class="p">)</span> <span class="p">{</span>
+        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;file changed: &#39;</span> <span class="o">+</span> <span class="nx">f</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
+      <span class="p">}</span>
+    <span class="p">}</span>
+  <span class="p">});</span>
+<span class="p">}</span>
+</code></pre></div>
+<h3 id="subscribing-only-to-changed-files">Subscribing only to changed files</h3>
+
+<p>The example above will generate results for existing (and deleted!) files at
+the time that the subscription is established.  In some applications this can
+be undesirable.  The following example shows how to add a logical time constraint.</p>
+
+<p>watchman tracks changes using an <a href="/watchman/docs/clockspec.html">abstract clock</a>.  We&#39;ll determine the current clock at the time
+that we initiate the watch and then add that as a constraint in our subscription.</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">function</span> <span class="nx">make_time_constrained_subscription</span><span class="p">(</span><span class="nx">client</span><span class="p">,</span> <span class="nx">watch</span><span class="p">,</span> <span class="nx">relative_path</span><span class="p">)</span> <span class="p">{</span>
+  <span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;clock&#39;</span><span class="p">,</span> <span class="nx">watch</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+      <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">&#39;Failed to query clock:&#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
+      <span class="k">return</span><span class="p">;</span>
+    <span class="p">}</span>
+
+    <span class="nx">sub</span> <span class="o">=</span> <span class="p">{</span>
+      <span class="c1">// Match any `.js` file in the dir_of_interest</span>
+      <span class="nx">expression</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;allof&quot;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.js&quot;</span><span class="p">]],</span>
+      <span class="c1">// Which fields we&#39;re interested in</span>
+      <span class="nx">fields</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="s2">&quot;size&quot;</span><span class="p">,</span> <span class="s2">&quot;exists&quot;</span><span class="p">,</span> <span class="s2">&quot;type&quot;</span><span class="p">],</span>
+      <span class="c1">// add our time constraint</span>
+      <span class="nx">since</span><span class="o">:</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">clock</span>
+    <span class="p">};</span>
+
+    <span class="k">if</span> <span class="p">(</span><span class="nx">relative_path</span><span class="p">)</span> <span class="p">{</span>
+      <span class="nx">sub</span><span class="p">.</span><span class="nx">relative_root</span> <span class="o">=</span> <span class="nx">relative_path</span><span class="p">;</span>
+    <span class="p">}</span>
+
+    <span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;subscribe&#39;</span><span class="p">,</span> <span class="nx">watch</span><span class="p">,</span> <span class="s1">&#39;mysubscription&#39;</span><span class="p">,</span> <span class="nx">sub</span><span class="p">],</span>
+      <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+        <span class="c1">// handle the result here</span>
+      <span class="p">});</span>
+  <span class="p">});</span>
+<span class="p">}</span>
+</code></pre></div>
+<h2 id="nodejs-api-reference">NodeJS API Reference</h2>
+
+<h2 id="methods">Methods</h2>
+
+<h3 id="client-capabilitycheck-options-done">client.capabilityCheck(options, done)</h3>
+
+<p>The <code>capabilityCheck</code> method issues a <a href="/watchman/docs/cmds/version.html">version</a> command to query the capabilities of the
+server.</p>
+
+<p>If the server doesn&#39;t support capabilities, <code>capabilityCheck</code> will emulate
+the capability response for a handful of significant capabilities based
+on the version reported by the server.</p>
+
+<p>The <code>options</code> argument may contain the following properties:</p>
+
+<ul>
+<li><code>optional</code> an array listing optional capability names</li>
+<li><code>required</code> an array listing required capability names</li>
+</ul>
+
+<p>The properties are passed through to the underlying <code>version</code> command.</p>
+
+<p>The <code>done</code> parameter is a callback that will be passed (error, result) when the
+command completes.  It doesn&#39;t make sense to issue a <code>capabilityCheck</code> call and
+not provide the <code>done</code> callback.</p>
+
+<p>The response object will contain a <code>capabilities</code> object property whose keys
+will be the union of the <code>optional</code> and <code>required</code> capability names and whose
+values will be either <code>true</code> or <code>false</code> depending on the availability of the
+capability name.</p>
+
+<p>If any of the <code>required</code> capabilities are not supported by the server, the
+<code>error</code> parameter in the <code>done</code> callback will be set and will contain a
+meaningful error message.</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">client</span><span class="p">.</span><span class="nx">capabilityCheck</span><span class="p">({</span><span class="nx">optional</span><span class="o">:</span><span class="p">[],</span> <span class="nx">required</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;relative_roots&#39;</span><span class="p">]},</span>
+  <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+      <span class="c1">// error will be an Error object if the watchman service is not</span>
+      <span class="c1">// installed, or if any of the names listed in the `required`</span>
+      <span class="c1">// array are not supported by the server</span>
+      <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>
+    <span class="p">}</span>
+    <span class="c1">// resp will be an extended version response:</span>
+    <span class="c1">// {&#39;version&#39;: &#39;3.8.0&#39;, &#39;capabilities&#39;: {&#39;relative_roots&#39;: true}}</span>
+    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">resp</span><span class="p">);</span>
+  <span class="p">});</span>
+</code></pre></div>
+<h3 id="client-command-args-done">client.command(args [, done])</h3>
+
+<p>Sends a command to the watchman service.  <code>args</code> is an array that specifies
+the command name and any optional arguments.  The command is queued and
+dispatched asynchronously.  You may queue multiple commands to the service;
+they will be dispatched in FIFO order once the client connection is established.</p>
+
+<p>The <code>done</code> parameter is a callback that will be passed (error, result) when the
+command completes.  You may omit it if you are not interested in the result of
+the command.</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;watch-project&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">cwd</span><span class="p">()],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+  <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;watch failed: &#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
+    <span class="k">return</span><span class="p">;</span>
+  <span class="p">}</span>
+  <span class="k">if</span> <span class="p">(</span><span class="s1">&#39;warning&#39;</span> <span class="k">in</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;warning: &#39;</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">warning</span><span class="p">);</span>
+  <span class="p">}</span>
+  <span class="k">if</span> <span class="p">(</span><span class="s1">&#39;relative_path&#39;</span> <span class="k">in</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="c1">// We will need to remember and adjust for relative_path</span>
+    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;watching project &#39;</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">watch</span><span class="p">,</span> <span class="s1">&#39; relative path to cwd is &#39;</span><span class="p">,</span>
+      <span class="nx">resp</span><span class="p">.</span><span class="nx">relative_path</span><span class="p">);</span>
+  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
+    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;watching &#39;</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">watch</span><span class="p">);</span>
+  <span class="p">}</span>
+<span class="p">});</span>
+</code></pre></div>
+<p>If a field named <code>warning</code> is present in <code>resp</code>, the watchman service is trying
+to communicate an issue that the user should see and address.  For example, if
+the system watch resources need adjustment, watchman will provide information
+about this and how to remediate the issue.  It is suggested that tools that
+build on top of this library bubble the warning message up to the user.</p>
+
+<h3 id="client-end">client.end()</h3>
+
+<p>Terminates the connection to the watchman service.  Does not wait
+for any queued commands to send.</p>
+
+<h2 id="events">Events</h2>
+
+<p>The following events are emitted by the watchman client object:</p>
+
+<h3 id="event-39-connect-39">Event: &#39;connect&#39;</h3>
+
+<p>Emitted when the client successfully connects to the watchman service</p>
+
+<h3 id="event-39-error-39">Event: &#39;error&#39;</h3>
+
+<p>Emitted when the socket to the watchman service encounters an error.</p>
+
+<p>It may also be emitted prior to establishing a connection if we are unable
+to successfully execute the watchman CLI binary to determine how to talk
+to the server process.</p>
+
+<p>It is passed a variable that encapsulates the error.</p>
+
+<h3 id="event-39-end-39">Event: &#39;end&#39;</h3>
+
+<p>Emitted when the socket to the watchman service is closed</p>
+
+<h3 id="event-39-log-39">Event: &#39;log&#39;</h3>
+
+<p>Emitted in response to a unilateral <code>log</code> PDU from the watchman service.
+To enable these, you need to send a <code>log-level</code> command to the service:</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="c1">// This is very verbose, you probably don&#39;t want to do this</span>
+<span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;log-level&#39;</span><span class="p">,</span> <span class="s1">&#39;debug&#39;</span><span class="p">]);</span>
+<span class="nx">client</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;log&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">info</span><span class="p">)</span> <span class="p">{</span>
+  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">info</span><span class="p">);</span>
+<span class="p">});</span>
+</code></pre></div>
+<h3 id="event-39-subscription-39">Event: &#39;subscription&#39;</h3>
+
+<p>Emitted in response to a unilateral <code>subscription</code> PDU from the watchman
+service.  To enable these, you need to send a <code>subscribe</code> command to the service:</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js">  <span class="c1">// Subscribe to notifications about .js files</span>
+  <span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;subscribe&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">cwd</span><span class="p">(),</span> <span class="s1">&#39;mysubscription&#39;</span><span class="p">,</span> <span class="p">{</span>
+      <span class="nx">expression</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.js&quot;</span><span class="p">]</span>
+    <span class="p">}],</span>
+    <span class="kd">function</span><span class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+      <span class="k">if</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
+        <span class="c1">// Probably an error in the subscription criteria</span>
+        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;failed to subscribe: &#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
+        <span class="k">return</span><span class="p">;</span>
+      <span class="p">}</span>
+      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;subscription &#39;</span> <span class="o">+</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">subscribe</span> <span class="o">+</span> <span class="s1">&#39; established&#39;</span><span class="p">);</span>
+    <span class="p">}</span>
+  <span class="p">);</span>
+
+  <span class="c1">// Subscription results are emitted via the subscription event.</span>
+  <span class="c1">// Note that watchman will deliver a list of all current files</span>
+  <span class="c1">// when you first subscribe, so you don&#39;t need to walk the tree</span>
+  <span class="c1">// for yourself on startup</span>
+  <span class="nx">client</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;subscription&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
+    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">resp</span><span class="p">.</span><span class="nx">root</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">subscription</span><span class="p">,</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">files</span><span class="p">);</span>
+  <span class="p">});</span>
+</code></pre></div>
+<p>To cancel a subscription, use the <code>unsubscribe</code> command and pass in the name of
+the subscription you want to cancel:</p>
+<div class="highlight"><pre><code class="language-js" data-lang="js">  <span class="nx">client</span><span class="p">.</span><span class="nx">command</span><span class="p">([</span><span class="s1">&#39;unsubscribe&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">cwd</span><span class="p">(),</span> <span class="s1">&#39;mysubscription&#39;</span><span class="p">]);</span>
+</code></pre></div>
+<p>Note that subscriptions names are scoped to your connection to the watchman
+service; multiple different clients can use the same subscription name without
+fear of colliding.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/release-notes.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/release-notes.html
@@ -0,0 +1,831 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/release-notes.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Release Notes" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Release Notes</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/release-notes.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Release Notes",
+        currentGroup: "Installation",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Release Notes</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>We focus on the highlights only in these release notes.  For a full history
+that includes all of the gory details, please see <a href="https://github.com/facebook/watchman/commits/master">the commit history on
+GitHub</a>.</p>
+
+<h3 id="watchman-3-8-0-not-yet-released">Watchman 3.8.0 (Not yet released)</h3>
+
+<ul>
+<li><code>-j</code> CLI option now accepts either JSON or BSER encoded command on stdin</li>
+<li>Added <a href="/watchman/docs/capabilities.html">capabilities</a> to the server,
+and added the <a href="/watchman/docs/cmd/version.html#capabilityCheck">capabilityCheck</a>
+method to the python and node clients.</li>
+</ul>
+
+<h3 id="pywatchman-1-2-0-2015-08-15">pywatchman 1.2.0 (2015-08-15)</h3>
+
+<ul>
+<li>Added the <code>capabilityCheck</code> method</li>
+<li>Added <code>SocketTimeout</code> exception to distinguish timeouts from protocol level
+exceptions</li>
+</ul>
+
+<h3 id="fb-watchman-1-3-0-for-node-2015-08-15">fb-watchman 1.3.0 for node (2015-08-15)</h3>
+
+<ul>
+<li>Added the <a href="/watchman/docs/nodejs.html#checking-for-watchman-availability">capabilityCheck</a> method.</li>
+</ul>
+
+<h3 id="pywatchman-1-0-0-2015-08-06">pywatchman 1.0.0 (2015-08-06)</h3>
+
+<ul>
+<li>First official pypi release, thanks to <a href="https://github.com/kwlzn">@kwlzn</a>
+for setting up the release machinery for this.</li>
+</ul>
+
+<h3 id="watchman-3-7-0-2015-08-05">Watchman 3.7.0 (2015-08-05)</h3>
+
+<p>(Watchman 3.6.0 wasn&#39;t formally released)</p>
+
+<ul>
+<li>Fixed bug where <code>query match</code> on <code>foo*.java</code> with <code>wholename</code> scope
+would incorrectly match <code>foo/bar/baz.java</code>.</li>
+<li>Added <code>src/**/*.java</code> recursive glob pattern support to <code>query match</code>.</li>
+<li>Added options dictionary to <code>query</code>&#39;s <code>match</code> operator.</li>
+<li>Added <code>includedotfiles</code> option to <code>query match</code> to include files
+whose names start with <code>.</code>.</li>
+<li>Added <code>noescape</code> option to <code>query match</code> to make <code>\</code> match literal <code>\</code>.</li>
+<li>We&#39;ll now automatically age out and stop watches. See <a href="/watchman/docs/config.html#idle_reap_age_seconds">idle_reap_age_seconds</a> for more information.</li>
+<li><code>watch-project</code> will now try harder to re-use an existing watch and avoid
+creating an overlapping watch.</li>
+<li>Reduce I/O priority during crawling on systems that support this</li>
+<li>Fixed issue with the <code>long long</code> data type in the python BSER module</li>
+</ul>
+
+<h3 id="fb-watchman-1-2-0-for-node-2015-07-11">fb-watchman 1.2.0 for node (2015-07-11)</h3>
+
+<ul>
+<li>Updated the node client to more gracefully handle <code>undefined</code> values in
+objects when serializing them; we now omit keys whose values are <code>undefined</code>
+rather than throw an exception.</li>
+</ul>
+
+<h3 id="watchman-3-5-0-2015-06-29">Watchman 3.5.0 (2015-06-29)</h3>
+
+<ul>
+<li>Fix the version number reported by watchman.</li>
+</ul>
+
+<h3 id="watchman-3-4-0-2015-06-29">Watchman 3.4.0 (2015-06-29)</h3>
+
+<ul>
+<li><code>trigger</code> now supports an optional <code>relative_root</code> argument. The trigger is
+evaluated with respect to this subdirectory. See
+<a href="/watchman/docs/cmd/trigger.html#relative-roots">trigger</a> for more.</li>
+</ul>
+
+<h3 id="fb-watchman-1-1-0-for-node-2015-06-25">fb-watchman 1.1.0 for node (2015-06-25)</h3>
+
+<ul>
+<li>Updated the node client to handle 64-bit integer values using the
+<a href="https://www.npmjs.com/package/node-int64">node-int64</a>.  These are most
+likely to show up if your query fields include <code>size</code> and you have files
+larger than 2GB in your watched root.</li>
+</ul>
+
+<h3 id="fb-watchman-1-0-0-for-node-2015-06-23">fb-watchman 1.0.0 for node (2015-06-23)</h3>
+
+<ul>
+<li>Updated the node client to support <a href="/watchman/docs/bser.html">BSER</a>
+encoding, fixing a quadratic performance issue in the JSON stream
+decoder that was used previously.</li>
+</ul>
+
+<h3 id="watchman-3-3-0-2015-06-22">Watchman 3.3.0 (2015-06-22)</h3>
+
+<ul>
+<li><code>query</code> and <code>subscribe</code> now support an optional <code>relative_root</code>
+argument. Inputs and outputs are evaluated with respect to this
+subdirectory. See
+<a href="/watchman/docs/file-query.html#relative-roots">File Queries</a> for more.</li>
+</ul>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/simple-query.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/simple-query.html
@@ -0,0 +1,786 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/simple-query.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Simple Pattern Syntax" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Simple Pattern Syntax</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/simple-query.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Simple Pattern Syntax",
+        currentGroup: "Queries",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Simple Pattern Syntax</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Simple patterns follow a more traditional UNIX command line approach of
+using command line switches to indicate the nature of the pattern match.
+When simple patterns are used, the result set unconditionally includes
+all core file metadata fields.  They are described in more detail below.</p>
+
+<h2 id="simple-pattern-syntax">Simple Pattern syntax</h2>
+
+<p>Where you see <code>[patterns]</code> in the command syntax for the <code>find</code>, <code>since</code> and
+<code>trigger</code> commands, we allow filename patterns that match according the
+following rules:</p>
+
+<ul>
+<li>We maintain an <em>inclusion</em> and an <em>exclusion</em> list.  As the arguments
+are processed we&#39;ll accumulate them in one or the other.  By default
+they are accumulated into the <em>inclusion</em> list.</li>
+<li><code>-X</code> causes any subsequent items to be placed into the <em>exclusion</em> list</li>
+<li><code>-I</code> causes any subsequent items to be placed into the <em>inclusion</em> list</li>
+<li><code>--</code> indicates the end of the set of patterns</li>
+<li><code>-p</code> indicates that the following pattern should use <code>pcre</code> as the
+expression term.  This is reset after generating the next term.</li>
+<li><code>-P</code> indicates that the following pattern should use <code>ipcre</code> as the
+expression term and perform a case insensitive match.  This is reset
+after generating the next term.</li>
+<li>If neither <code>-p</code> nor <code>-P</code> were used, the generated term will use <code>match</code></li>
+<li><code>!</code> followed by a space followed by a pattern will negate the sense of
+the pattern match generating a <code>not</code> term.</li>
+</ul>
+
+<p>Any elements in the inclusion list will match; they are composed together
+using an &quot;anyof&quot; term.</p>
+
+<p>The inclusion list and exclusion lists are composed using the logic <code>(NOT
+anyof exclusion) AND (anyof inclusion)</code>.</p>
+
+<p>For example:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> &#39;*.c&#39;
+</code></pre></div>
+<p>Generates a file expression:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.c&quot;</span><span class="p">,</span> <span class="s2">&quot;wholename&quot;</span><span class="p">]</span>
+</code></pre></div>
+<p>A list:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">&#39;*.js&#39; &#39;*.css&#39;
+</code></pre></div><div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;anyof&quot;</span><span class="p">,</span>
+  <span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.js&quot;</span><span class="p">,</span> <span class="s2">&quot;wholename&quot;</span><span class="p">],</span>
+  <span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.css&quot;</span><span class="p">,</span> <span class="s2">&quot;wholename&quot;</span><span class="p">]</span>
+<span class="p">]</span>
+</code></pre></div>
+<p>An example of how the exclusion list syntax works:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text"> -X &#39;*.c&#39; -I &#39;*main*&#39;
+</code></pre></div>
+<p>Generates:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;allof&quot;</span><span class="p">,</span>
+  <span class="p">[</span><span class="s2">&quot;not&quot;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*.c&quot;</span><span class="p">,</span> <span class="s2">&quot;wholename&quot;</span><span class="p">]],</span>
+  <span class="p">[</span><span class="s2">&quot;match&quot;</span><span class="p">,</span> <span class="s2">&quot;*main*&quot;</span><span class="p">,</span> <span class="s2">&quot;wholename&quot;</span><span class="p">]</span>
+<span class="p">]</span>
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/socket-interface.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/socket-interface.html
@@ -0,0 +1,791 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/socket-interface.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Socket Interface" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Socket Interface</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/socket-interface.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Socket Interface",
+        currentGroup: "Invocation",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Socket Interface</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>Most simple uses of Watchman will invoke the watchman binary and process its
+output.  Sometimes it is desirable to avoid the overhead of an extra process
+and talk directly to your watchman service.</p>
+
+<p>The watchman service runs as a single long-lived process per user.  The
+watchman binary will take care of spawning the server process if necessary.</p>
+
+<p>The server will create a unix domain socket for communication with its clients.
+The location of the socket depends on compile time options and command line
+flags.  It is recommended that you invoke <code>watchman get-sockname</code> to discover
+the location, or if you are being invoked via a trigger (since version 2.9.7)
+you will find the location in the <code>$WATCHMAN_SOCK</code> environmental variable.</p>
+
+<h2 id="watchman-protocol">Watchman Protocol</h2>
+
+<p>The unix socket implements a request-response protocol with PDUs encoded in
+either JSON or BSER representation.  Some watchman commands (notably
+<code>subscribe</code> and <code>log-level</code>) allow the watchman service to unilaterally send
+any number of PDUs to the client, and require more stateful handling.</p>
+
+<h3 id="json-encoding">JSON encoding</h3>
+
+<p>The JSON encoding represents a request or a response as a single line of
+compact JSON encoded data.  The newline is used to detect the end of the PDU.</p>
+
+<p>Requests from the client are always represented as a JSON array.</p>
+
+<p>Responses from the server are always represented as a JSON object.</p>
+
+<p>Sending the <code>since</code> command is simply a matter of formatting it as JSON.  Note
+that the JSON text must be a single line (don&#39;t send a pretty printed version
+of it!) and be followed by a newline <code>\n</code> character:</p>
+<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">[</span><span class="s2">&quot;since&quot;</span><span class="p">,</span> <span class="s2">&quot;/path/to/src&quot;</span><span class="p">,</span> <span class="s2">&quot;n:c_srcs&quot;</span><span class="p">,</span> <span class="s2">&quot;*.c&quot;</span><span class="p">]</span> <span class="err">&lt;NEWLINE&gt;</span>
+</code></pre></div>
+<h3 id="bser-encoding">BSER encoding</h3>
+
+<p>BSER is a local-only binary serialization format that can represent the same
+data types as JSON, but in a more compact form and not be limited to UTF-8
+representation of strings.</p>
+
+<p>When you make a request using BSER, the server will respond in BSER encoding.</p>
+
+<p>You can <a href="/watchman/docs/bser.html">read more about BSER in the BSER specification</a>.</p>
+
+<h3 id="reporting-errors-and-warnings">Reporting Errors and Warnings</h3>
+
+<p>If a Response includes a field named <code>error</code> it indicates that the request was
+not successful.  The <code>error</code> field, if present, is a string value that can be
+presented to the user.</p>
+
+<p>If a Response includes a field named <code>warning</code> it indicates that there is some
+condition that should be reported back to the user so that the system can
+operate more effectively.  Tools should display this to the user as an
+advisory.  At the time of writing, this can be triggered due to overflowing the
+system limits on file watching resources.  These are important to address so
+that events are not missed and thus so that correctness and system performance
+are maintained.</p>
+
+<p>The warning message contains a link to this documentation that provides
+advice on tuning and resolving the issue.</p>
+
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
Index: watchman-3.7.0/html-docs/troubleshooting.html
===================================================================
--- /dev/null
+++ watchman-3.7.0/html-docs/troubleshooting.html
@@ -0,0 +1,945 @@
+<!DOCTYPE html>
+<html>
+  <head>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  
+	<meta property="og:url" content="/watchman/docs/troubleshooting.html" />
+	<meta property="og:site_name" content="Watchman"/>
+	<meta property="og:title" content="Troubleshooting" />
+	<meta property="og:image" content="/watchman/static/og_image.png" />
+	<meta property="og:description" content="" />
+
+  <link rel="stylesheet" type="text/css" media="screen" href="/watchman/css/main.css">
+  
+  <link rel="icon" href="static/favicon.png" type="image/x-icon">
+  
+  <base href="/watchman/" />
+  
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons.min.js"></script>
+  <script async defer src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js"></script>
+
+  <title>Troubleshooting</title>
+  <meta name="description" content="">
+
+  <link rel="canonical" href="/watchman/docs/troubleshooting.html">
+  <link rel="alternate" type="application/rss+xml" title="Watchman" href="/watchman/feed.xml" />
+</head>
+
+  <body>    
+    <div id="fixed_header" class="fixedHeaderContainer visible">
+  <header>
+    <a href="/watchman/"><img src="/watchman/static/logo.png" /><h2>Watchman</h2></a>
+    <div class="navigationWrapper navigationFull" id="flat_nav">
+      <nav class="navigation">
+        <ul>
+          
+          <li class="navItem navItemActive">
+            <a href=docs/install.html>Docs</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=support.html>Support</a>
+          </li>
+          
+          <li class="navItem ">
+            <a href=http://github.com/facebook/watchman>GitHub</a>
+          </li>
+          
+        </ul>
+      </nav>
+    </div>
+    <div class="navigationWrapper navigationSlider" id="navigation_wrap"></div>
+  </header>
+  <script>
+    var event = document.createEvent('Event');
+    event.initEvent('slide', true, true);
+    document.addEventListener('slide', function (e) {
+      document.body.classList.toggle('sliderActive');
+    }, false);
+    var navData = [
+      
+      {
+        href       : "docs/install.html",
+        text       : "Docs",
+      },
+      
+      {
+        href       : "support.html",
+        text       : "Support",
+      },
+      
+      {
+        href       : "http://github.com/facebook/watchman",
+        text       : "GitHub",
+      },
+      
+    ];
+  </script>
+  <script type="text/javascript">  
+  window.addEventListener('load', function() {
+    var Nav = React.createClass({displayName: "Nav",
+      getInitialState: function() {
+        return {
+          currentPath: window.location.pathname,
+          slideoutActive: false,
+        };
+      },
+      getDefaultProps: function() {
+        return {
+          data: navData,
+        }
+      },
+      handleClick: function(id) {
+        this.setState({
+          slideoutActive: false,
+        });
+        document.dispatchEvent(event);
+      },
+      handleSlide: function(id) {
+        this.setState({
+          slideoutActive: !this.state.slideoutActive,
+        });
+        document.dispatchEvent(event);
+      },
+      render: function() {
+        var classes = React.addons.classSet({
+          'navSlideout': true,
+          'navSlideoutActive': this.state.slideoutActive,
+        });
+        var navClasses = React.addons.classSet({
+          'slidingNav': true,
+          'slidingNavActive': this.state.slideoutActive,
+        });
+        return (
+          React.createElement("div", null, 
+            React.createElement("div", {className: classes, onClick: this.handleSlide}, 
+              React.createElement("i", {className: "fa fa-bars"})
+            ), 
+            React.createElement("nav", {className: navClasses}, 
+              React.createElement("ul", null, 
+                this.props.data.map(this.renderNavItems)
+              )
+            )
+          )
+        );
+      },
+      renderNavItems: function(child, index) {
+        var classes = React.addons.classSet({
+          'navItem': true,
+          'navItemActive': this.state.currentPath === child.href,
+        });
+        return (
+          React.createElement("li", {key: index, className: classes}, 
+            React.createElement("a", {onClick: this.handleClick, href: child.href}, child.text)
+          )
+        );
+      },
+    });
+
+    function render(navData) {
+      React.render(
+        React.createElement(Nav, {data: navData}),
+        document.getElementById('navigation_wrap')
+      );
+    }
+    render(navData);
+  });
+  </script>
+</div>
+
+    <div class="navPusher">
+      <div class="mainContainer blogContainer postContainer">
+  <div id="main_wrap" class="wrapper mainWrapper">
+    <div>
+</div>
+<nav class='toc' id="doc_nav"></nav>
+<script>
+  var docnavData = [
+    
+    {
+      group     : "Installation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/install.html",
+          title : "Installation",
+          url : "/watchman/docs/install.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/release-notes.html",
+          title : "Release Notes",
+          url : "/watchman/docs/release-notes.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Invocation",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cli-options.html",
+          title : "Command Line",
+          url : "/watchman/docs/cli-options.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/nodejs.html",
+          title : "NodeJS",
+          url : "/watchman/docs/nodejs.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/config.html",
+          title : "Configuration Files",
+          url : "/watchman/docs/config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/socket-interface.html",
+          title : "Socket Interface",
+          url : "/watchman/docs/socket-interface.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Compatibility",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/compatibility.html",
+          title : "Compatibility Rules",
+          url : "/watchman/docs/compatibility.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/capabilities.html",
+          title : "Capabilities",
+          url : "/watchman/docs/capabilities.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Commands",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/cmd/clock.html",
+          title : "clock",
+          url : "/watchman/docs/cmd/clock.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/find.html",
+          title : "find",
+          url : "/watchman/docs/cmd/find.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-config.html",
+          title : "get-config",
+          url : "/watchman/docs/cmd/get-config.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/get-sockname.html",
+          title : "get-sockname",
+          url : "/watchman/docs/cmd/get-sockname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/list-capabilities.html",
+          title : "list-capabilities",
+          url : "/watchman/docs/cmd/list-capabilities.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log.html",
+          title : "log",
+          url : "/watchman/docs/cmd/log.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/log-level.html",
+          title : "log-level",
+          url : "/watchman/docs/cmd/log-level.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/query.html",
+          title : "query",
+          url : "/watchman/docs/cmd/query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/shutdown-server.html",
+          title : "shutdown-server",
+          url : "/watchman/docs/cmd/shutdown-server.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/since.html",
+          title : "since",
+          url : "/watchman/docs/cmd/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/subscribe.html",
+          title : "subscribe",
+          url : "/watchman/docs/cmd/subscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger.html",
+          title : "trigger",
+          url : "/watchman/docs/cmd/trigger.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-del.html",
+          title : "trigger-del",
+          url : "/watchman/docs/cmd/trigger-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/trigger-list.html",
+          title : "trigger-list",
+          url : "/watchman/docs/cmd/trigger-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/unsubscribe.html",
+          title : "unsubscribe",
+          url : "/watchman/docs/cmd/unsubscribe.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/version.html",
+          title : "version",
+          url : "/watchman/docs/cmd/version.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch.html",
+          title : "watch",
+          url : "/watchman/docs/cmd/watch.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del.html",
+          title : "watch-del",
+          url : "/watchman/docs/cmd/watch-del.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-del-all.html",
+          title : "watch-del-all",
+          url : "/watchman/docs/cmd/watch-del-all.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-list.html",
+          title : "watch-list",
+          url : "/watchman/docs/cmd/watch-list.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cmd/watch-project.html",
+          title : "watch-project",
+          url : "/watchman/docs/cmd/watch-project.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Queries",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/clockspec.html",
+          title : "Clockspec",
+          url : "/watchman/docs/clockspec.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/file-query.html",
+          title : "File Queries",
+          url : "/watchman/docs/file-query.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/simple-query.html",
+          title : "Simple Pattern Syntax",
+          url : "/watchman/docs/simple-query.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Expression Terms",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/expr/allof.html",
+          title : "allof",
+          url : "/watchman/docs/expr/allof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/anyof.html",
+          title : "anyof",
+          url : "/watchman/docs/expr/anyof.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/dirname.html",
+          title : "dirname & idirname",
+          url : "/watchman/docs/expr/dirname.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/empty.html",
+          title : "empty",
+          url : "/watchman/docs/expr/empty.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/exists.html",
+          title : "exists",
+          url : "/watchman/docs/expr/exists.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/match.html",
+          title : "match & imatch",
+          url : "/watchman/docs/expr/match.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/name.html",
+          title : "name & iname",
+          url : "/watchman/docs/expr/name.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/not.html",
+          title : "not",
+          url : "/watchman/docs/expr/not.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/pcre.html",
+          title : "pcre & ipcre",
+          url : "/watchman/docs/expr/pcre.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/since.html",
+          title : "since",
+          url : "/watchman/docs/expr/since.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/size.html",
+          title : "size",
+          url : "/watchman/docs/expr/size.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/suffix.html",
+          title : "suffix",
+          url : "/watchman/docs/expr/suffix.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/expr/type.html",
+          title : "type",
+          url : "/watchman/docs/expr/type.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Internals",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/bser.html",
+          title : "BSER Binary Protocol",
+          url : "/watchman/docs/bser.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/casefolding.html",
+          title : "Case-Insensitivity",
+          url : "/watchman/docs/casefolding.html",
+        },
+        
+        
+        {
+          key : "/watchman/contributing.html",
+          title : "Contributing",
+          url : "/watchman/contributing.html",
+        },
+        
+        
+        {
+          key : "/watchman/docs/cookies.html",
+          title : "Query Synchronization",
+          url : "/watchman/docs/cookies.html",
+        }
+        
+      ],
+    },
+    
+    {
+      group     : "Troubleshooting",
+      items     : [
+        
+        
+        {
+          key : "/watchman/docs/troubleshooting.html",
+          title : "Troubleshooting",
+          url : "/watchman/docs/troubleshooting.html",
+        }
+        
+      ],
+    },
+    
+  ];
+</script>
+<script type="text/javascript">  
+window.addEventListener('load', function() {
+  var DocNav = React.createClass({displayName: "DocNav",
+    getInitialState: function() {
+      return {
+        toggleActive: false,
+      };
+    },
+    getDefaultProps: function() {
+      return {
+        currentDoc: "Troubleshooting",
+        currentGroup: "Troubleshooting",
+        data: docnavData,
+      }
+    },
+    handleSlide: function(id) {
+      this.setState({
+        toggleActive: !this.state.toggleActive,
+      });
+    },
+    render: function() {
+      var classes = React.addons.classSet({
+        'navToggle': true,
+        'navToggleActive': this.state.toggleActive,
+      });
+      var navClasses = React.addons.classSet({
+        'toggleNav': true,
+        'toggleNavActive': this.state.toggleActive,
+      });
+      return (
+        React.createElement("div", {className: navClasses}, 
+          React.createElement("section", null, 
+            this.props.data.map(this.renderNavGroups)
+          ), 
+          React.createElement("div", {className: classes, onClick: this.handleSlide}, React.createElement("i", {className: "fa fa-chevron-circle-down"}))
+        )
+      );
+    },
+    renderNavGroups: function(child, index) {
+      var classes = React.addons.classSet({
+        'navGroup': true,
+        'navGroupActive': this.props.currentGroup === child.group,
+      });
+      return (
+        React.createElement("div", {className: classes, key: index}, 
+          React.createElement("h3", null, child.group), 
+          React.createElement("ul", null, 
+            child.items.map(this.renderNavItems)
+          )
+        )
+      );
+    },
+    renderNavItems: function(child, index) {
+      var itemClasses = React.addons.classSet({
+        'navListItem': true,
+        'navListItemActive': this.props.currentDoc === child.title,
+      });
+      var classes = React.addons.classSet({
+        'navItem': true,
+        'navItemActive': this.props.currentDoc === child.title,
+      });
+      return (
+        React.createElement("li", {className: itemClasses, key: index}, React.createElement("a", {className: classes, href: child.url},  child.title))
+      );
+    },
+  });
+
+  function docNavRender(docnavData) {
+    React.render(
+      React.createElement(DocNav, {data: docnavData}),
+      document.getElementById('doc_nav')
+    );
+  }
+  docNavRender(docnavData);
+});
+</script>
+
+    <div class="post">
+  <header class="post-header">
+    <h1 class="post-title">Troubleshooting</h1>
+  </header>
+
+  <article class="post-content">
+   
+      <p>We try to give directed advice in Watchman error diagnostics, which means that
+we will show a link to a section on this page with some context and advice where
+we have enough information to do so.  Some operating systems provide richer
+diagnostic information than others, so we have to resort to more generic
+advice in some cases.</p>
+
+<p>The most common cause of problems is hitting system resource limits.  There are
+finite resources available for filesystem watching, and when they are exceeded
+it can impact performance in the best case or prohibit correct operation in the
+worst case.</p>
+
+<h2 id="ensure-that-you-are-on-the-best-available-version">Ensure that you are on the best available version</h2>
+
+<p>It is generally a good idea to make sure that you are using the latest
+version of the software, so that you avoid any known issues.</p>
+
+<p>If you are running a pre-built binary provided by your operating system
+distribution system, there is a chance that you&#39;ll need to build the
+latest version from source.  You can find instructions for this in
+<a href="/watchman/docs/install.html">the installation section</a>.</p>
+
+<h2 id="recrawl">Recrawl</h2>
+
+<p>A recrawl is an action that Watchman performs in order to recover from
+situations where it believes that it has lost sync with the state of the
+filesystem.</p>
+
+<p>The most common cause for a recrawl is on Linux systems where the default
+inotify limits are sized quite small.  What this means is that the rate at
+which your watched roots are generating changes is higher than the kernel can
+buffer and relay to the watchman service.  When this happens, the kernel
+detects the overflow and signals <code>IN_Q_OVERFLOW</code>.  The recovery is to
+recursively scan the root to make sure that we know what is really there and
+re-sync with the notification stream.</p>
+
+<p>Frequent recrawls are undesirable because they result in a potentially
+expensive full tree crawl, which marks all files as changed and propagates this
+status to clients which will in turn perform some action on the (likely
+falsely) changed state of the majority of files.</p>
+
+<h3 id="avoiding-recrawls">Avoiding Recrawls</h3>
+
+<p>There is no simple formula for setting your system limits; bigger is better but
+comes at the cost of kernel memory to maintain the buffers.  You and/or your
+system administrator should review the workload for your system and the
+<a href="/watchman/docs/install.html#system-specific-preparation">System Specific Preparation Documentation</a> and raise your limits
+accordingly.</p>
+
+<h3 id="kfseventstreameventflaguserdropped">kFSEventStreamEventFlagUserDropped</h3>
+
+<p>OS X has a similar internal limit and behavior when that limit is exceeded.
+If you&#39;re encountering a message like:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">Recrawled this watch 1 times, most recently because:
+/some/path: kFSEventStreamEventFlagUserDropped
+</code></pre></div>
+<p>then you are hitting the limits of your system.  There is no direct control
+over the limit, but starting in Watchman 3.2 you may increase the
+<a href="/watchman/docs/config.html#fsevents-latency">fsevents_latency</a>
+parameter in your <code>.watchmanconfig</code> file.</p>
+
+<h3 id="i-39-ve-changed-my-limits-how-can-i-clear-the-warning">I&#39;ve changed my limits, how can I clear the warning?</h3>
+
+<p>The warning will stick until you cancel the watch and reinstate it, or restart
+the watchman process.  The simplest resolution is to run <code>watchman
+shutdown-server</code> and re-establish your watch on your next watchman query.</p>
+
+<h2 id="where-are-the-logs">Where are the logs?</h2>
+
+<p>Watchman places logs in a file named <code>&lt;STATEDIR&gt;/&lt;USER&gt;.log</code>, where <code>STATEDIR</code>
+is set at the time that you built watchman.</p>
+
+<p>If you used the <code>--enable-statedir=&lt;STATEDIR&gt;</code> configure option, that will
+be the location that holds your logs.  If not, the default for <code>STATEDIR</code>
+will be <code>&lt;PREFIX&gt;/var/run/watchman</code>, or for older versions of watchman,
+the logs may be placed in <code>&lt;TMPDIR&gt;/.watchman.&lt;USER&gt;.log</code>.</p>
+
+<p>If you&#39;re running a <code>homebrew</code> build of watchman, you&#39;ll find the logs in a
+path named something like
+<code>/usr/local/Cellar/watchman/3.2.0/var/run/watchman/&lt;USER&gt;.log</code>.</p>
+
+<p><em>Since 3.8.</em></p>
+
+<p>Watchman places the logs in a file named <code>&lt;STATEDIR&gt;/log</code>, which will
+typically be a location like <code>&lt;PREFIX&gt;/var/run/watchman/&lt;USER&gt;-state/log</code>.</p>
+
+<p>The default log location may be overridden by the <code>--logfile</code> <a href="/watchman/docs/cli-options.html#server-options">Server Option</a>.</p>
+
+<p><a href="/watchman/docs/cli-options.html#quick-note-on-default-locations">Quick note on default locations</a> explains what
+we mean by <code>&lt;STATEDIR&gt;</code>, <code>&lt;TMPDIR&gt;</code>, <code>&lt;USER&gt;</code> and so on.</p>
+
+<h2 id="poison-inotify_add_watch">Poison: inotify_add_watch</h2>
+<div class="highlight"><pre><code class="language-text" data-lang="text">A non-recoverable condition has triggered.  Watchman needs your help!
+The triggering condition was at timestamp=1407695600: inotify-add-watch(/my/path) -&gt; Cannot allocate memory
+All requests will continue to fail with this message until you resolve
+the underlying problem.  You will find more information on fixing this at
+https://facebook.github.io/watchman/docs/troubleshooting.html#poison-inotify-add-watch
+</code></pre></div>
+<p>If you&#39;ve encountered this state it means that your <em>kernel</em> was unable to
+watch a dir in one or more of the roots you&#39;ve asked it to watch.  This
+particular condition is considered non-recoverable by Watchman on the basis
+that nothing that the Watchman service can do can guarantee that the root cause
+is resolved, and while the system is in this state, Watchman cannot guarantee
+that it can respond with the correct results that its clients depend upon.  We
+consider ourselves poisoned and will fail all requests for all watches (not
+just the watch that it triggered on) until the process is restarted.</p>
+
+<p>There are two primary reasons that this can trigger:</p>
+
+<ul>
+<li>The user limit on the total number of inotify watches was reached or the
+kernel failed to allocate a needed resource</li>
+<li>Insufficient kernel memory was available</li>
+</ul>
+
+<p>The resolution for the former is to revisit
+<a href="/watchman/docs/install.html#system-specific-preparation">System Specific Preparation Documentation</a> and raise your limits
+accordingly.</p>
+
+<p>The latter condition implies that your workload is exceeding the available RAM
+on the machine.  It is difficult to give specific advice to resolve this
+condition here; you may be able to tune down other system limits to free up
+some resources, or you may just need to install more RAM in the system.</p>
+
+<h3 id="i-39-ve-changed-my-limits-how-can-i-clear-the-error">I&#39;ve changed my limits, how can I clear the error?</h3>
+
+<p>The error will stick until you restart the watchman process.  The simplest
+resolution is to run <code>watchman shutdown-server</code>.</p>
+
+<p>If you have not actually resolved the root cause you may continue to trigger
+and experience this state each time the system trips over these limits.</p>
+
+<h2 id="fsevents">FSEvents</h2>
+
+<p>FSEvents is the file watching facility on OS X.  There are few diagnostics
+that can help diagnose issues with FSEvents; the API itself gives little
+feedback on a number of error cases and instead emits rather cryptic error
+messages to the log file.</p>
+
+<p>If you got here because an error message told you to read this section,
+it will have also asked you to look at your log file.  If you are using an
+older version of watchman and encounter the error message
+<code>FSEventStreamStart failed</code>, then you should locate your log file (see
+<a href="#where-are-the-logs">Where are the logs?</a> above) and look for lines
+that mention FSEvents and then consult the information below.</p>
+
+<h3 id="fseventstreamstart-register_with_server-error-f2d_register_rpc-gt-null-21">FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() =&gt; (null) (-21)</h3>
+
+<p>Nobody outside of Apple is sure what precisely this means, but it indicates
+that the fsevents service has gotten in a bad state.  Possible reasons for
+this may include:</p>
+
+<ul>
+<li>There are too many event stream clients</li>
+<li>One or more event stream clients has gotten in a bad state and is somehow
+impacting the fsevents service</li>
+</ul>
+
+<p>To resolve this issue, you may wish to try the following, which are
+progressively more invasive:</p>
+
+<ul>
+<li>Avoid establishing multiple overlapping watches within the same filesystem
+tree, especially for large trees.  We recommend watching only the root of a
+project or repo and not watching sub-trees within that tree.  Organizations
+with large trees may wish to deploy the
+<a href="config.html#root-restrict-files">root_restrict_files</a> configuration option
+so that watchman will only allow watching project roots.</li>
+<li>Close or restart other applications that are using fsevents.
+Some examples are:
+
+<ul>
+<li>editors such as Sublime Text and TextMate.</li>
+<li>Many nodejs packages and Grunt style workflows make use of fsevents.
+Make sure that you upgrade nodejs to at least version <code>v0.11.14</code>.  If
+possible, configure your nodejs packages to use either
+<a href="https://www.npmjs.com/package/sane">sane</a> or
+<a href="https://www.npmjs.com/package/fb-watchman">fb-watchman</a> for file watching
+as this will consolidate the number of fsevents watches down to just the
+set maintained by watchman.</li>
+</ul></li>
+<li>Restart the fsevents service: <code>sudo pkill -9 -x fseventsd</code></li>
+<li>Restart your computer</li>
+</ul>
+
+<h2 id="triggers-subscriptions-don-39-t-fire-on-os-x">Triggers/Subscriptions don&#39;t fire on OS X</h2>
+
+<p>There is a rare fsevents bug that can prevent any notifications from working
+in directories where the case of the name of a directory in the kernel has
+an inconsistency.</p>
+
+<p>You can test whether this is happening to you by following <a href="https://github.com/andreyvit/find-fsevents-bugs">the instructions
+for the find-fsevents-bugs tool</a>.</p>
+
+<p>If it is happening to you, the resolution is to rename the directories
+highlighted by the tool.</p>
+
+<p>You can read more about this issue in the following resources:</p>
+
+<ul>
+<li><a href="http://feedback.livereload.com/knowledgebase/articles/86239-os-x-fsevents-bug-may-prevent-monitoring-of-certai">Knowledge base article for LiveReload</a></li>
+<li><a href="https://github.com/thibaudgg/rb-fsevent/issues/10">issue for the Ruby fsevents module</a></li>
+<li><a href="http://openradar.appspot.com/10207999">Open Radar bug report</a></li>
+</ul>
+
+<h2 id="reactnative-watcher-took-too-long-to-load">ReactNative: Watcher took too long to load</h2>
+
+<p>There was an issue that was the result of umask affecting the permissions of
+the launchd plist file that Watchman uses to set up your watchman service on OS
+X.  This issue was resolved in Watchman version 3.1.</p>
+
+<p>To update:</p>
+<div class="highlight"><pre><code class="language-text" data-lang="text">watchman shutdown-server
+brew update
+brew reinstall watchman
+</code></pre></div>
+    
+  </article>
+</div>
+
+  </div>
+</div>
+
+
+      <div class="footerContainer">
+  <div id="footer_wrap" class="wrapper footerWrapper">
+    <section id="fb_oss" class="fbOpenSourceFooter">
+      <a href="https://code.facebook.com/projects/" target="_blank"><img src="/watchman/static/oss_logo.png" alt="Facebook Open Source" title="Facebook Open Source" /></a>
+    </section>
+  </div>
+</div>
+<script>
+  var anchorForId = function (id) {
+    var anchor = document.createElement("a");
+    anchor.className = "header-link";
+    anchor.href      = window.location.href.replace(window.location.hash, '') + "#" + id;
+    anchor.innerHTML = "<i class=\"fa fa-link\"></i>";
+    anchor.title = "Permalink";
+    return anchor;
+  };
+
+  var linkifyAnchors = function (level, containingElement) {
+    var headers = containingElement.getElementsByTagName("h" + level);
+    for (var h = 0; h < headers.length; h++) {
+      var header = headers[h];
+
+      if (typeof header.id !== "undefined" && header.id !== "") {
+        header.appendChild(anchorForId(header.id));
+      }
+    }
+  };
+
+  window.addEventListener('load', function() {
+    var contentBlock = document.getElementsByClassName("post")[0] || document.getElementsByClassName("news")[0];
+    if (!contentBlock) {
+      return;
+    }
+    for (var level = 1; level <= 6; level++) {
+      linkifyAnchors(level, contentBlock);
+    }
+  });
+</script>
+
+<script>
+  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
+
+  ga('create', 'UA-44373548-7', 'auto');
+  ga('send', 'pageview');
+</script>
+<script>
+  window.addEventListener('load', function() {
+    hljs.initHighlightingOnLoad();
+
+    // Async load some styles
+    function loadStyle(href) {
+      var s = document.createElement('link');
+      s.setAttribute('rel', 'stylesheet');
+      s.setAttribute('href', href);
+      s.setAttribute('type', 'text/css');
+      document.getElementsByTagName('head')[0].appendChild(s);
+    }
+    loadStyle("//nuclide.io/static/fonts/332720/BC699FA675F9356E3.css");
+    loadStyle("//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/styles/default.min.css");
+    loadStyle("//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
+  });
+</script>
+
+    </div>
+  </body>
+
+</html>
